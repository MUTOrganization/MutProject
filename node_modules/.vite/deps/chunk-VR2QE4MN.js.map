{
  "version": 3,
  "sources": ["../../@react-aria/table/dist/packages/@react-aria/table/src/utils.ts", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ar-AE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/bg-BG.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/cs-CZ.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/da-DK.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/de-DE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/el-GR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/en-US.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/es-ES.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/et-EE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/fi-FI.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/fr-FR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/he-IL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/hr-HR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/hu-HU.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/it-IT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ja-JP.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ko-KR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/lt-LT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/lv-LV.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/nb-NO.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/nl-NL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pl-PL.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pt-BR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/pt-PT.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ro-RO.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/ru-RU.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sk-SK.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sl-SI.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sr-SP.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/sv-SE.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/tr-TR.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/uk-UA.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/zh-CN.json", "../../@react-aria/table/dist/packages/@react-aria/table/intl/zh-TW.json", "../../@react-aria/table/dist/packages/@react-aria/table/src/*.js", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/Item.ts", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/Section.ts", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/CollectionBuilder.ts", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/useCollection.ts", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/getChildNodes.ts", "../../@react-stately/collections/dist/packages/@react-stately/collections/src/getItemCount.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/utils.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useTypeSelect.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableCollection.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableItem.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/DOMLayoutDelegate.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/ListKeyboardDelegate.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableList.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/GridKeyboardDelegate.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/utils.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/ar-AE.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/bg-BG.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/cs-CZ.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/da-DK.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/de-DE.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/el-GR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/en-US.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/es-ES.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/et-EE.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/fi-FI.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/fr-FR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/he-IL.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/hr-HR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/hu-HU.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/it-IT.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/ja-JP.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/ko-KR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/lt-LT.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/lv-LV.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/nb-NO.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/nl-NL.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/pl-PL.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/pt-BR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/pt-PT.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/ro-RO.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/ru-RU.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/sk-SK.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/sl-SI.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/sr-SP.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/sv-SE.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/tr-TR.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/uk-UA.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/zh-CN.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/intl/zh-TW.json", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/*.js", "../../@react-aria/live-announcer/dist/packages/@react-aria/live-announcer/src/LiveAnnouncer.tsx", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGridSelectionAnnouncement.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useHighlightSelectionDescription.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGrid.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGridRowGroup.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGridRow.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGridCell.ts", "../../@react-aria/grid/dist/packages/@react-aria/grid/src/useGridSelectionCheckbox.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/TableKeyboardDelegate.ts", "../../@react-stately/flags/dist/packages/@react-stately/flags/src/index.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTable.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableColumnHeader.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableRow.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableHeaderRow.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableCell.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/useTableSelectionCheckbox.ts", "../../@react-aria/table/dist/packages/@react-aria/table/src/index.ts", "../../@nextui-org/checkbox/dist/chunk-5OP3BFLP.mjs", "../../@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckbox.ts", "../../@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/utils.ts", "../../@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckboxGroup.ts", "../../@react-aria/checkbox/dist/packages/@react-aria/checkbox/src/useCheckboxGroupItem.ts", "../../@react-stately/checkbox/dist/packages/@react-stately/checkbox/src/useCheckboxGroupState.ts", "../../@nextui-org/checkbox/dist/chunk-ACAJT7GC.mjs", "../../@nextui-org/checkbox/dist/chunk-DIDTODIV.mjs", "../../@nextui-org/checkbox/dist/chunk-5E6Z6LLK.mjs", "../../@nextui-org/checkbox/dist/chunk-STC4KFAA.mjs", "../../@nextui-org/checkbox/dist/chunk-CKQ4RPMV.mjs", "../../@nextui-org/table/node_modules/@react-aria/visually-hidden/dist/packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx", "../../@nextui-org/table/dist/chunk-IZM76DYO.mjs", "../../@nextui-org/table/dist/chunk-WTWKTCHZ.mjs", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/Selection.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/useMultipleSelectionState.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/SelectionManager.ts", "../../@react-stately/grid/dist/packages/@react-stately/grid/src/useGridState.ts", "../../@react-stately/grid/dist/packages/@react-stately/grid/src/GridCollection.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableCollection.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/useTableState.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableHeader.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/TableBody.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Column.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Row.ts", "../../@react-stately/table/dist/packages/@react-stately/table/src/Cell.ts", "../../@nextui-org/table/dist/chunk-RG5TTATB.mjs", "../../@nextui-org/table/dist/chunk-ZVKU2CIZ.mjs", "../../@nextui-org/table/dist/chunk-L22PK57S.mjs", "../../@nextui-org/table/dist/chunk-RBQQFBYX.mjs", "../../@nextui-org/table/dist/chunk-XPS6TYRF.mjs", "../../@nextui-org/table/dist/chunk-N2ZOKY36.mjs", "../../@nextui-org/table/dist/chunk-GZVIASP2.mjs", "../../@nextui-org/table/dist/chunk-QT7XRETF.mjs", "../../@nextui-org/spacer/dist/chunk-CH7FQ62Q.mjs", "../../@nextui-org/spacer/dist/chunk-XIKEQB64.mjs", "../../@nextui-org/spacer/dist/chunk-IXXDDLGU.mjs", "../../@nextui-org/table/dist/chunk-CIL4Y7FA.mjs", "../../@nextui-org/table/dist/chunk-FKPXBCGS.mjs", "../../@nextui-org/table/dist/chunk-F3UDT23P.mjs", "../../@nextui-org/table/dist/chunk-TSPNSPCL.mjs", "../../@nextui-org/table/dist/chunk-YRZGWF2W.mjs"],
  "sourcesContent": ["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n", "{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"columnSize\": \"{value} بالبكسل\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"resizerDescription\": \"اضغط على مفتاح Enter لبدء تغيير الحجم\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n", "{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"columnSize\": \"{value} пиксела\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"resizerDescription\": \"Натиснете „Enter“, за да започнете да преоразмерявате\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n", "{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"columnSize\": \"{value} pixelů\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"resizerDescription\": \"Stisknutím klávesy Enter začnete měnit velikost\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n", "{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"resizerDescription\": \"Tryk på Enter for at ændre størrelse\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n", "{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"columnSize\": \"{value} Pixel\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"resizerDescription\": \"Eingabetaste zum Starten der Größenänderung drücken\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n", "{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"resizerDescription\": \"Πατήστε Enter για έναρξη της αλλαγής μεγέθους\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n", "{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\",\n  \"columnSize\": \"{value} pixels\",\n  \"resizerDescription\": \"Press Enter to start resizing\"\n}\n", "{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"columnSize\": \"{value} píxeles\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"resizerDescription\": \"Pulse Intro para empezar a redimensionar\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n", "{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"columnSize\": \"{value} pikslit\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"resizerDescription\": \"Suuruse muutmise alustamiseks vajutage klahvi Enter\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n", "{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"columnSize\": \"{value} pikseliä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"resizerDescription\": \"Aloita koon muutos painamalla Enter-näppäintä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n", "{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"resizerDescription\": \"Appuyez sur Entrée pour commencer le redimensionnement.\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n", "{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"columnSize\": \"{value} פיקסלים\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"resizerDescription\": \"הקש Enter כדי לשנות את הגודל\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n", "{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"resizerDescription\": \"Pritisnite Enter da biste započeli promenu veličine\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n", "{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"columnSize\": \"{value} képpont\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"resizerDescription\": \"Nyomja le az Enter billentyűt az átméretezés megkezdéséhez\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n", "{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"resizerDescription\": \"Premi Invio per iniziare a ridimensionare\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n", "{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"columnSize\": \"{value} ピクセル\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"resizerDescription\": \"Enter キーを押してサイズ変更を開始\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n", "{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"columnSize\": \"{value} 픽셀\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"resizerDescription\": \"크기 조정을 시작하려면 Enter를 누르세요.\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n", "{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"columnSize\": \"{value} piks.\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"resizerDescription\": \"Paspauskite „Enter“, kad pradėtumėte keisti dydį\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n", "{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"columnSize\": \"{value} pikseļi\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"resizerDescription\": \"Nospiediet Enter, lai sāktu izmēru mainīšanu\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n", "{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"columnSize\": \"{value} piksler\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"resizerDescription\": \"Trykk på Enter for å starte størrelsesendring\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n", "{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"resizerDescription\": \"Druk op Enter om het formaat te wijzigen\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n", "{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"columnSize\": \"Liczba pikseli: {value}\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"resizerDescription\": \"Naciśnij Enter, aby rozpocząć zmienianie rozmiaru\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n", "{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"resizerDescription\": \"Pressione Enter para começar a redimensionar\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n", "{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"resizerDescription\": \"Prima Enter para iniciar o redimensionamento\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n", "{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"columnSize\": \"{value} pixeli\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"resizerDescription\": \"Apăsați pe Enter pentru a începe redimensionarea\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n", "{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"columnSize\": \"{value} пикс.\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"resizerDescription\": \"Нажмите клавишу Enter для начала изменения размеров\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n", "{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"columnSize\": \"Počet pixelov: {value}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"resizerDescription\": \"Stlačením klávesu Enter začnete zmenu veľkosti\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n", "{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"columnSize\": \"{value} slikovnih pik\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"resizerDescription\": \"Pritisnite tipko Enter da začnete spreminjati velikost\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n", "{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"resizerDescription\": \"Pritisnite Enter da biste započeli promenu veličine\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n", "{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"columnSize\": \"{value} pixlar\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"resizerDescription\": \"Tryck på Retur för att börja ändra storlek\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n", "{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"columnSize\": \"{value} piksel\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"resizerDescription\": \"Yeniden boyutlandırmak için Enter'a basın\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n", "{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"columnSize\": \"{value} пікс.\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"resizerDescription\": \"Натисніть Enter, щоб почати зміну розміру\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n", "{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"resizerDescription\": \"按“输入”键开始调整大小。\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n", "{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"resizerDescription\": \"按 Enter 鍵以開始調整大小\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {JSX, ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Key, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement | null\n}\n\ninterface CollectReactElement<T> extends ReactElement {\n  getCollectionNode(props: any, context: any): Generator<PartialNode<T>, void, Node<T>[]>\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: Partial<CollectionBase<T>>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: Partial<CollectionBase<T>>): Generator<Node<T>> {\n    let {children, items} = props;\n\n    if (React.isValidElement<{children: CollectionElement<T>}>(children) && children.type === React.Fragment) {\n      yield* this.iterateCollection({\n        children: children.props.children,\n        items\n      });\n    } else if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      let index = 0;\n      for (let item of items) {\n        yield* this.getFullNode({\n          value: item,\n          index\n        }, {renderer: children});\n        index++;\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        if (child) {\n          items.push(child);\n        }\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: NonNullable<CollectionElement<T>>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key | null): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T> & {index: number}, state: CollectionBuilderState, parentKey?: Key | null, parentNode?: Node<T>): Generator<Node<T>> {\n    if (React.isValidElement<{children: CollectionElement<T>}>(partialNode.element) && partialNode.element.type === React.Fragment) {\n      let children: CollectionElement<T>[] = [];\n\n      React.Children.forEach(partialNode.element.props.children, child => {\n        children.push(child);\n      });\n\n      let index = partialNode.index ?? 0;\n\n      for (const child of children) {\n        yield* this.getFullNode({\n          element: child,\n          index: index++\n        }, state, parentKey, parentNode);\n      }\n\n      return;\n    }\n\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as unknown as CollectReactElement<T>;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index ?? 0;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key ?? null;\n        if (nodeKey == null) {\n          nodeKey = childNode.element ? null : this.getKey(element as NonNullable<CollectionElement<T>>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value ?? partialNode.value ?? null;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode?.type ?? 'unknown parent type')}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null || partialNode.type == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value ?? null,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue ?? '',\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes || false,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes || !partialNode.childNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          let nodes = builder.getFullNode({...child, index}, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache: Array<Node<T>> = [];\n  let iterable: null | IterableIterator<Node<T>> = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper | undefined {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {ReactElement, useMemo} from 'react';\n\ninterface CollectionOptions<T, C extends Collection<Node<T>>> extends Omit<CollectionStateBase<T, C>, 'children'> {\n  children?: ReactElement<any> | null | (ReactElement<any> | null)[] | ((item: T) => ReactElement<any> | null)\n}\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionOptions<T, C>, factory: CollectionFactory<T, C>, context?: unknown): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n  let {children, items, collection} = props;\n  let result = useMemo(() => {\n    if (collection) {\n      return collection;\n    }\n    let nodes = builder.build({children, items}, context);\n    return factory(nodes);\n  }, [builder, children, items, collection, context, factory]);\n  return result;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {Collection, Node} from '@react-types/shared';\n\nexport function getChildNodes<T>(node: Node<T>, collection: Collection<Node<T>>): Iterable<Node<T>> {\n  // New API: call collection.getChildren with the node key.\n  if (typeof collection.getChildren === 'function') {\n    return collection.getChildren(node.key);\n  }\n\n  // Old API: access childNodes directly.\n  return node.childNodes;\n}\n\nexport function getFirstItem<T>(iterable: Iterable<T>): T | undefined {\n  return getNthItem(iterable, 0);\n}\n\nexport function getNthItem<T>(iterable: Iterable<T>, index: number): T | undefined {\n  if (index < 0) {\n    return undefined;\n  }\n\n  let i = 0;\n  for (let item of iterable) {\n    if (i === index) {\n      return item;\n    }\n\n    i++;\n  }\n}\n\nexport function getLastItem<T>(iterable: Iterable<T>): T | undefined {\n  let lastItem: T | undefined = undefined;\n  for (let value of iterable) {\n    lastItem = value;\n  }\n\n  return lastItem;\n}\n\nexport function compareNodeOrder<T>(collection: Collection<Node<T>>, a: Node<T>, b: Node<T>) {\n  // If the two nodes have the same parent, compare their indices.\n  if (a.parentKey === b.parentKey) {\n    return a.index - b.index;\n  }\n\n  // Otherwise, collect all of the ancestors from each node, and find the first one that doesn't match starting from the root.\n  // Include the base nodes in case we are comparing nodes of different levels so that we can compare the higher node to the lower level node's\n  // ancestor of the same level\n  let aAncestors = [...getAncestors(collection, a), a];\n  let bAncestors = [...getAncestors(collection, b), b];\n  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a, i) => a !== bAncestors[i]);\n  if (firstNonMatchingAncestor !== -1) {\n    // Compare the indices of two children within the common ancestor.\n    a = aAncestors[firstNonMatchingAncestor];\n    b = bAncestors[firstNonMatchingAncestor];\n    return a.index - b.index;\n  }\n\n  // If there isn't a non matching ancestor, we might be in a case where one of the nodes is the ancestor of the other.\n  if (aAncestors.findIndex(node => node === b) >= 0) {\n    return 1;\n  } else if (bAncestors.findIndex(node => node === a) >= 0) {\n    return -1;\n  }\n\n  // 🤷\n  return -1;\n}\n\nfunction getAncestors<T>(collection: Collection<Node<T>>, node: Node<T>): Node<T>[] {\n  let parents: Node<T>[] = [];\n\n  let currNode: Node<T> | null = node;\n  while (currNode?.parentKey != null) {\n    currNode = collection.getItem(currNode.parentKey);\n    if (currNode) {\n      parents.unshift(currNode);\n    }\n  }\n\n  return parents;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Node} from '@react-types/shared';\nimport {getChildNodes} from './getChildNodes';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Collection<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  // TS isn't smart enough to know we've ensured count is a number, so use a new variable\n  let counter = 0;\n  let countItems = (items: Iterable<Node<T>>) => {\n    for (let item of items) {\n      if (item.type === 'section') {\n        countItems(getChildNodes(item, collection));\n      } else {\n        counter++;\n      }\n    }\n  };\n\n  countItems(collection);\n  cache.set(collection, counter);\n  return counter;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAppleDevice, isMac} from '@react-aria/utils';\n\ninterface Event {\n  altKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport function isNonContiguousSelectionModifier(e: Event) {\n  // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n  // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n  return isAppleDevice() ? e.altKey : e.ctrlKey;\n}\n\nexport function isCtrlKeyPressed(e: Event) {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, Key, KeyboardDelegate} from '@react-types/shared';\nimport {KeyboardEvent, useRef} from 'react';\nimport {MultipleSelectionManager} from '@react-stately/selection';\n\n/**\n * Controls how long to wait before clearing the typeahead buffer.\n */\nconst TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000; // 1 second\n\nexport interface AriaTypeSelectOptions {\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * Called when an item is focused by typing.\n   */\n  onTypeSelect?: (key: Key) => void\n}\n\nexport interface TypeSelectAria {\n  /**\n   * Props to be spread on the owner of the options.\n   */\n  typeSelectProps: DOMAttributes\n}\n\n/**\n * Handles typeahead interactions with collections.\n */\nexport function useTypeSelect(options: AriaTypeSelectOptions): TypeSelectAria {\n  let {keyboardDelegate, selectionManager, onTypeSelect} = options;\n  let state = useRef<{search: string, timeout: ReturnType<typeof setTimeout> | undefined}>({\n    search: '',\n    timeout: undefined\n  }).current;\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    let character = getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    // Do not propagate the Spacebar event if it's meant to be part of the search.\n    // When we time out, the search term becomes empty, hence the check on length.\n    // Trimming is to account for the case of pressing the Spacebar more than once,\n    // which should cycle through the selection/deselection of the focused item.\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) {\n        e.stopPropagation();\n      }\n    }\n\n    state.search += character;\n\n    if (keyboardDelegate.getKeyForSearch != null) {\n      // Use the delegate to find a key to focus.\n      // Prioritize items after the currently focused item, falling back to searching the whole list.\n      let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n\n      // If no key found, search from the top.\n      if (key == null) {\n        key = keyboardDelegate.getKeyForSearch(state.search);\n      }\n\n      if (key != null) {\n        selectionManager.setFocusedKey(key);\n        if (onTypeSelect) {\n          onTypeSelect(key);\n        }\n      }\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(() => {\n      state.search = '';\n    }, TYPEAHEAD_DEBOUNCE_WAIT_MS);\n  };\n\n  return {\n    typeSelectProps: {\n      // Using a capturing listener to catch the keydown event before\n      // other hooks in order to handle the Spacebar event.\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : undefined\n    }\n  };\n}\n\nfunction getStringForKey(key: string) {\n  // If the key is of length 1, it is an ASCII value.\n  // Otherwise, if there are no ASCII characters in the key name,\n  // it is a Unicode character.\n  // See https://www.w3.org/TR/uievents-key/\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n    return key;\n  }\n\n  return '';\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, FocusStrategy, Key, KeyboardDelegate, RefObject} from '@react-types/shared';\nimport {flushSync} from 'react-dom';\nimport {FocusEvent, KeyboardEvent, useEffect, useRef} from 'react';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, scrollIntoView, scrollIntoViewport, useEvent, useRouter} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useLocale} from '@react-aria/i18n';\nimport {useTypeSelect} from './useTypeSelect';\n\nexport interface AriaSelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement | null>,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean,\n  /**\n   * Whether the collection items are contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * The ref attached to the scrollable body. Used to provide automatic scrolling on item focus for non-virtualized collections.\n   * If not provided, defaults to the collection ref.\n   */\n  scrollRef?: RefObject<HTMLElement | null>,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\nexport interface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: DOMAttributes\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(options: AriaSelectableCollectionOptions): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    selectOnFocus = manager.selectionBehavior === 'replace',\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false,\n    isVirtualized,\n    // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref,\n    linkBehavior = 'action'\n  } = options;\n  let {direction} = useLocale();\n  let router = useRouter();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n    if (e.altKey && e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (!ref.current?.contains(e.target as Element)) {\n      return;\n    }\n\n    const navigateToKey = (key: Key | undefined, childFocus?: FocusStrategy) => {\n      if (key != null) {\n        if (manager.isLink(key) && linkBehavior === 'selection' && selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          // Set focused key and re-render synchronously to bring item into view if needed.\n          flushSync(() => {\n            manager.setFocusedKey(key, childFocus);\n          });\n\n          let item = scrollRef.current?.querySelector(`[data-key=\"${CSS.escape(key.toString())}\"]`);\n          let itemProps = manager.getItemProps(key);\n          if (item) {\n            router.open(item, e, itemProps.href, itemProps.routerOptions);\n          }\n\n          return;\n        }\n\n        manager.setFocusedKey(key, childFocus);\n\n        if (manager.isLink(key) && linkBehavior === 'override') {\n          return;\n        }\n\n        if (e.shiftKey && manager.selectionMode === 'multiple') {\n          manager.extendSelection(key);\n        } else if (selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown': {\n        if (delegate.getKeyBelow) {\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyBelow?.(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        if (delegate.getKeyAbove) {\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyAbove?.(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if (delegate.getKeyLeftOf) {\n          let nextKey: Key | undefined | null = manager.focusedKey != null ? delegate.getKeyLeftOf?.(manager.focusedKey) : null;\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getFirstKey?.(manager.focusedKey) : delegate.getLastKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        if (delegate.getKeyRightOf) {\n          let nextKey: Key | undefined | null = manager.focusedKey != null ? delegate.getKeyRightOf?.(manager.focusedKey) : null;\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getLastKey?.(manager.focusedKey) : delegate.getFirstKey?.(manager.focusedKey);\n          }\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n          }\n        }\n        break;\n      }\n      case 'Home':\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          let firstKey: Key | null = delegate.getFirstKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(firstKey);\n          if (firstKey != null) {\n            if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n              manager.extendSelection(firstKey);\n            } else if (selectOnFocus) {\n              manager.replaceSelection(firstKey);\n            }\n          }\n        }\n        break;\n      case 'End':\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(lastKey);\n          if (lastKey != null) {\n            if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n              manager.extendSelection(lastKey);\n            } else if (selectOnFocus) {\n              manager.replaceSelection(lastKey);\n            }\n          }\n        }\n        break;\n      case 'PageDown':\n        if (delegate.getKeyPageBelow && manager.focusedKey != null) {\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      case 'PageUp':\n        if (delegate.getKeyPageAbove && manager.focusedKey != null) {\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          if (nextKey != null) {\n            e.preventDefault();\n            navigateToKey(nextKey);\n          }\n        }\n        break;\n      case 'a':\n        if (isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case 'Escape':\n        if (!disallowEmptySelection && manager.selectedKeys.size !== 0) {\n          e.stopPropagation();\n          e.preventDefault();\n          manager.clearSelection();\n        }\n        break;\n      case 'Tab': {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n            let next: FocusableElement | undefined = undefined;\n            let last: FocusableElement;\n            do {\n              last = walker.lastChild() as FocusableElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              focusWithoutScrolling(next);\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  // Store the scroll position so we can restore it later.\n  /// TODO: should this happen all the time??\n  let scrollPos = useRef({top: 0, left: 0});\n  useEvent(scrollRef, 'scroll', isVirtualized ? undefined : () => {\n    scrollPos.current = {\n      top: scrollRef.current?.scrollTop ?? 0,\n      left: scrollRef.current?.scrollLeft ?? 0\n    };\n  });\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      let navigateToFirstKey = (key: Key | undefined | null) => {\n        if (key != null) {\n          manager.setFocusedKey(key);\n          if (selectOnFocus) {\n            manager.replaceSelection(key);\n          }\n        }\n      };\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      if (relatedTarget && (e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)) {\n        navigateToFirstKey(manager.lastSelectedKey ?? delegate.getLastKey?.());\n      } else {\n        navigateToFirstKey(manager.firstSelectedKey ?? delegate.getFirstKey?.());\n      }\n    } else if (!isVirtualized && scrollRef.current) {\n      // Restore the scroll position to what it was before.\n      scrollRef.current.scrollTop = scrollPos.current.top;\n      scrollRef.current.scrollLeft = scrollPos.current.left;\n    }\n\n    if (manager.focusedKey != null && scrollRef.current) {\n      // Refocus and scroll the focused item into view if it exists within the scrollable region.\n      let element = scrollRef.current.querySelector(`[data-key=\"${CSS.escape(manager.focusedKey.toString())}\"]`) as HTMLElement;\n      if (element) {\n        // This prevents a flash of focus on the first/last element in the collection, or the collection itself.\n        if (!element.contains(document.activeElement)) {\n          focusWithoutScrolling(element);\n        }\n\n        let modality = getInteractionModality();\n        if (modality === 'keyboard') {\n          scrollIntoViewport(element, {containingElement: ref.current});\n        }\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  const autoFocusRef = useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      let focusedKey: Key | null = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === 'first') {\n        focusedKey = delegate.getFirstKey?.() ?? null;\n      } if (autoFocus === 'last') {\n        focusedKey = delegate.getLastKey?.() ?? null;\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        for (let key of selectedKeys) {\n          if (manager.canSelectItem(key)) {\n            focusedKey = key;\n            break;\n          }\n        }\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus && ref.current) {\n        focusSafely(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Scroll the focused element into view when the focusedKey changes.\n  let lastFocusedKey = useRef(manager.focusedKey);\n  useEffect(() => {\n    if (manager.isFocused && manager.focusedKey != null && (manager.focusedKey !== lastFocusedKey.current || autoFocusRef.current) && scrollRef.current && ref.current) {\n      let modality = getInteractionModality();\n      let element = ref.current.querySelector(`[data-key=\"${CSS.escape(manager.focusedKey.toString())}\"]`) as HTMLElement;\n      if (!element) {\n        // If item element wasn't found, return early (don't update autoFocusRef and lastFocusedKey).\n        // The collection may initially be empty (e.g. virtualizer), so wait until the element exists.\n        return;\n      }\n\n      if (modality === 'keyboard' || autoFocusRef.current) {\n        scrollIntoView(scrollRef.current, element);\n\n        // Avoid scroll in iOS VO, since it may cause overlay to close (i.e. RAC submenu)\n        if (modality !== 'virtual') {\n          scrollIntoViewport(element, {containingElement: ref.current});\n        }\n      }\n    }\n\n    // If the focused key becomes null (e.g. the last item is deleted), focus the whole collection.\n    if (!shouldUseVirtualFocus && manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null && ref.current) {\n      focusSafely(ref.current);\n    }\n\n    lastFocusedKey.current = manager.focusedKey;\n    autoFocusRef.current = false;\n  });\n\n  // Intercept FocusScope restoration since virtualized collections can reuse DOM nodes.\n  useEvent(ref, 'react-aria-focus-scope-restore', e => {\n    e.preventDefault();\n    manager.setFocused(true);\n  });\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e) {\n      // Ignore events that bubbled through portals.\n      if (scrollRef.current === e.target) {\n        // Prevent focus going to the collection when clicking on the scrollbar.\n        e.preventDefault();\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n  // to move real DOM focus to the element anyway.\n  let tabIndex: number | undefined = undefined;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  return {\n    collectionProps: {\n      ...handlers,\n      tabIndex\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Key, LongPressEvent, PointerType, PressEvent, RefObject} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {mergeProps, openLink, useRouter} from '@react-aria/utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {PressProps, useLongPress, usePress} from '@react-aria/interactions';\nimport {useEffect, useRef} from 'react';\n\nexport interface SelectableItemOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A unique key for the item.\n   */\n  key: Key,\n  /**\n   * Ref to the item.\n   */\n  ref: RefObject<FocusableElement | null>,\n  /**\n   * By default, selection occurs on pointer down. This can be strange if selecting an\n   * item causes the UI to disappear immediately (e.g. menus).\n   */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Whether selection requires the pointer/mouse down and up events to occur on the same target or triggers selection on\n   * the target of the pointer/mouse up event.\n   */\n  allowsDifferentPressOrigin?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Function to focus the item.\n   */\n  focus?: () => void,\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * - 'none': links are disabled for both selection and actions (e.g. handled elsewhere).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override' | 'none'\n}\n\nexport interface SelectableItemStates {\n  /** Whether the item is currently in a pressed state. */\n  isPressed: boolean,\n  /** Whether the item is currently selected. */\n  isSelected: boolean,\n  /** Whether the item is currently focused. */\n  isFocused: boolean,\n  /**\n   * Whether the item is non-interactive, i.e. both selection and actions are disabled and the item may\n   * not be focused. Dependent on `disabledKeys` and `disabledBehavior`.\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the item may be selected, dependent on `selectionMode`, `disabledKeys`, and `disabledBehavior`.\n   */\n  allowsSelection: boolean,\n  /**\n   * Whether the item has an action, dependent on `onAction`, `disabledKeys`,\n   * and `disabledBehavior`. It may also change depending on the current selection state\n   * of the list (e.g. when selection is primary). This can be used to enable or disable hover\n   * styles or other visual indications of interactivity.\n   */\n  hasAction: boolean\n}\n\nexport interface SelectableItemAria extends SelectableItemStates {\n  /**\n   * Props to be spread on the item root node.\n   */\n  itemProps: DOMAttributes\n}\n\n/**\n * Handles interactions with an item in a selectable collection.\n */\nexport function useSelectableItem(options: SelectableItemOptions): SelectableItemAria {\n  let {\n    selectionManager: manager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    shouldUseVirtualFocus,\n    focus,\n    isDisabled,\n    onAction,\n    allowsDifferentPressOrigin,\n    linkBehavior = 'action'\n  } = options;\n  let router = useRouter();\n\n  let onSelect = (e: PressEvent | LongPressEvent | PointerEvent) => {\n    if (e.pointerType === 'keyboard' && isNonContiguousSelectionModifier(e)) {\n      manager.toggleSelection(key);\n    } else {\n      if (manager.selectionMode === 'none') {\n        return;\n      }\n\n      if (manager.isLink(key)) {\n        if (linkBehavior === 'selection' && ref.current) {\n          let itemProps = manager.getItemProps(key);\n          router.open(ref.current, e, itemProps.href, itemProps.routerOptions);\n          // Always set selected keys back to what they were so that select and combobox close.\n          manager.setSelectedKeys(manager.selectedKeys);\n          return;\n        } else if (linkBehavior === 'override' || linkBehavior === 'none') {\n          return;\n        }\n      }\n\n      if (manager.selectionMode === 'single') {\n        if (manager.isSelected(key) && !manager.disallowEmptySelection) {\n          manager.toggleSelection(key);\n        } else {\n          manager.replaceSelection(key);\n        }\n      } else if (e && e.shiftKey) {\n        manager.extendSelection(key);\n      } else if (manager.selectionBehavior === 'toggle' || (e && (isCtrlKeyPressed(e) || e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n        // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        manager.toggleSelection(key);\n      } else {\n        manager.replaceSelection(key);\n      }\n    }\n  };\n\n  // Focus the associated DOM node when this item becomes the focusedKey\n  useEffect(() => {\n    let isFocused = key === manager.focusedKey;\n    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {\n      if (focus) {\n        focus();\n      } else if (document.activeElement !== ref.current && ref.current) {\n        focusSafely(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref, key, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n\n  isDisabled = isDisabled || manager.isDisabled(key);\n  // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n  // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n  let itemProps: SelectableItemAria['itemProps'] = {};\n  if (!shouldUseVirtualFocus && !isDisabled) {\n    itemProps = {\n      tabIndex: key === manager.focusedKey ? 0 : -1,\n      onFocus(e) {\n        if (e.target === ref.current) {\n          manager.setFocusedKey(key);\n        }\n      }\n    };\n  } else if (isDisabled) {\n    itemProps.onMouseDown = (e) => {\n      // Prevent focus going to the body when clicking on a disabled item.\n      e.preventDefault();\n    };\n  }\n\n  // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n  // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n  // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n  // With touch, onAction occurs on single tap, and long press enters selection mode.\n  let isLinkOverride = manager.isLink(key) && linkBehavior === 'override';\n  let hasLinkAction = manager.isLink(key) && linkBehavior !== 'selection' && linkBehavior !== 'none';\n  let allowsSelection = !isDisabled && manager.canSelectItem(key) && !isLinkOverride;\n  let allowsActions = (onAction || hasLinkAction) && !isDisabled;\n  let hasPrimaryAction = allowsActions && (\n    manager.selectionBehavior === 'replace'\n      ? !allowsSelection\n      : !allowsSelection || manager.isEmpty\n  );\n  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n  let hasAction = hasPrimaryAction || hasSecondaryAction;\n  let modality = useRef<PointerType | null>(null);\n\n  let longPressEnabled = hasAction && allowsSelection;\n  let longPressEnabledOnPressStart = useRef(false);\n  let hadPrimaryActionOnPressStart = useRef(false);\n\n  let performAction = (e) => {\n    if (onAction) {\n      onAction();\n    }\n\n    if (hasLinkAction && ref.current) {\n      let itemProps = manager.getItemProps(key);\n      router.open(ref.current, e, itemProps.href, itemProps.routerOptions);\n    }\n  };\n\n  // By default, selection occurs on pointer down. This can be strange if selecting an\n  // item causes the UI to disappear immediately (e.g. menus).\n  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n  // onPress requires a pointer down event on the same element as pointer up. For menus,\n  // we want to be able to have the pointer down on the trigger that opens the menu and\n  // the pointer up on the menu item rather than requiring a separate press.\n  // For keyboard events, selection still occurs on key down.\n  let itemPressProps: PressProps = {};\n  if (shouldSelectOnPressUp) {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      if (e.pointerType === 'keyboard' && (!hasAction || isSelectionKey())) {\n        onSelect(e);\n      }\n    };\n\n    // If allowsDifferentPressOrigin, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n    // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n    if (!allowsDifferentPressOrigin) {\n      itemPressProps.onPress = (e) => {\n        if (hasPrimaryAction || (hasSecondaryAction && e.pointerType !== 'mouse')) {\n          if (e.pointerType === 'keyboard' && !isActionKey()) {\n            return;\n          }\n\n          performAction(e);\n        } else if (e.pointerType !== 'keyboard' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n    } else {\n      itemPressProps.onPressUp = hasPrimaryAction ? undefined : (e) => {\n        if (e.pointerType !== 'keyboard' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n\n      itemPressProps.onPress = hasPrimaryAction ? performAction : undefined;\n    }\n  } else {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n\n      // Select on mouse down unless there is a primary action which will occur on mouse up.\n      // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n      // and the Enter key performs onAction on key up.\n      if (\n        allowsSelection && (\n          (e.pointerType === 'mouse' && !hasPrimaryAction) ||\n          (e.pointerType === 'keyboard' && (!allowsActions || isSelectionKey()))\n        )\n      ) {\n        onSelect(e);\n      }\n    };\n\n    itemPressProps.onPress = (e) => {\n      // Selection occurs on touch up. Primary actions always occur on pointer up.\n      // Both primary and secondary actions occur on Enter key up. The only exception\n      // is secondary actions, which occur on double click with a mouse.\n      if (\n        e.pointerType === 'touch' ||\n        e.pointerType === 'pen' ||\n        e.pointerType === 'virtual' ||\n        (e.pointerType === 'keyboard' && hasAction && isActionKey()) ||\n        (e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current)\n      ) {\n        if (hasAction) {\n          performAction(e);\n        } else if (allowsSelection) {\n          onSelect(e);\n        }\n      }\n    };\n  }\n\n  itemProps['data-key'] = key;\n  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n  let {pressProps, isPressed} = usePress(itemPressProps);\n\n  // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n  let onDoubleClick = hasSecondaryAction ? (e) => {\n    if (modality.current === 'mouse') {\n      e.stopPropagation();\n      e.preventDefault();\n      performAction(e);\n    }\n  } : undefined;\n\n  // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n  // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n  // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n  let {longPressProps} = useLongPress({\n    isDisabled: !longPressEnabled,\n    onLongPress(e) {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n        manager.setSelectionBehavior('toggle');\n      }\n    }\n  });\n\n  // Prevent native drag and drop on long press if we also select on long press.\n  // Once the user is in selection mode, they can long press again to drag.\n  // Use a capturing listener to ensure this runs before useDrag, regardless of\n  // the order the props get merged.\n  let onDragStartCapture = e => {\n    if (modality.current === 'touch' && longPressEnabledOnPressStart.current) {\n      e.preventDefault();\n    }\n  };\n\n  // Prevent default on link clicks so that we control exactly\n  // when they open (to match selection behavior).\n  let onClick = manager.isLink(key) ? e => {\n    if (!(openLink as any).isOpening) {\n      e.preventDefault();\n    }\n  } : undefined;\n\n  return {\n    itemProps: mergeProps(\n      itemProps,\n      allowsSelection || hasPrimaryAction ? pressProps : {},\n      longPressEnabled ? longPressProps : {},\n      {onDoubleClick, onDragStartCapture, onClick}\n    ),\n    isPressed,\n    isSelected: manager.isSelected(key),\n    isFocused: manager.isFocused && manager.focusedKey === key,\n    isDisabled,\n    allowsSelection,\n    hasAction\n  };\n}\n\nfunction isActionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === 'Enter';\n}\n\nfunction isSelectionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === ' ' || event?.code === 'Space';\n}\n", "/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key, LayoutDelegate, Rect, RefObject, Size} from '@react-types/shared';\n\nexport class DOMLayoutDelegate implements LayoutDelegate {\n  private ref: RefObject<HTMLElement | null>;\n\n  constructor(ref: RefObject<HTMLElement | null>) {\n    this.ref = ref;\n  }\n\n  getItemRect(key: Key): Rect | null {\n    let container = this.ref.current;\n    if (!container) {\n      return null;\n    }\n    let item = key != null ? container.querySelector(`[data-key=\"${CSS.escape(key.toString())}\"]`) : null;\n    if (!item) {\n      return null;\n    }\n\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n\n    return {\n      x: itemRect.left - containerRect.left + container.scrollLeft,\n      y: itemRect.top - containerRect.top + container.scrollTop,\n      width: itemRect.width,\n      height: itemRect.height\n    };\n  }\n\n  getContentSize(): Size {\n    let container = this.ref.current;\n    return {\n      width: container?.scrollWidth ?? 0,\n      height: container?.scrollHeight ?? 0\n    };\n  }\n\n  getVisibleRect(): Rect {\n    let container = this.ref.current;\n    return {\n      x: container?.scrollLeft ?? 0,\n      y: container?.scrollTop ?? 0,\n      width: container?.offsetWidth ?? 0,\n      height: container?.offsetHeight ?? 0\n    };\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, DisabledBehavior, Key, KeyboardDelegate, LayoutDelegate, Node, Orientation, Rect, RefObject} from '@react-types/shared';\nimport {DOMLayoutDelegate} from './DOMLayoutDelegate';\nimport {isScrollable} from '@react-aria/utils';\n\ninterface ListKeyboardDelegateOptions<T> {\n  collection: Collection<Node<T>>,\n  ref: RefObject<HTMLElement | null>,\n  collator?: Intl.Collator,\n  layout?: 'stack' | 'grid',\n  orientation?: Orientation,\n  direction?: Direction,\n  disabledKeys?: Set<Key>,\n  disabledBehavior?: DisabledBehavior,\n  layoutDelegate?: LayoutDelegate\n}\n\nexport class ListKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private disabledKeys: Set<Key>;\n  private disabledBehavior: DisabledBehavior;\n  private ref: RefObject<HTMLElement | null>;\n  private collator: Intl.Collator | undefined;\n  private layout: 'stack' | 'grid';\n  private orientation?: Orientation;\n  private direction?: Direction;\n  private layoutDelegate: LayoutDelegate;\n\n  constructor(collection: Collection<Node<T>>, disabledKeys: Set<Key>, ref: RefObject<HTMLElement | null>, collator?: Intl.Collator);\n  constructor(options: ListKeyboardDelegateOptions<T>);\n  constructor(...args: any[]) {\n    if (args.length === 1) {\n      let opts = args[0] as ListKeyboardDelegateOptions<T>;\n      this.collection = opts.collection;\n      this.ref = opts.ref;\n      this.collator = opts.collator;\n      this.disabledKeys = opts.disabledKeys || new Set();\n      this.disabledBehavior = opts.disabledBehavior || 'all';\n      this.orientation = opts.orientation || 'vertical';\n      this.direction = opts.direction;\n      this.layout = opts.layout || 'stack';\n      this.layoutDelegate = opts.layoutDelegate || new DOMLayoutDelegate(opts.ref);\n    } else {\n      this.collection = args[0];\n      this.disabledKeys = args[1];\n      this.ref = args[2];\n      this.collator = args[3];\n      this.layout = 'stack';\n      this.orientation = 'vertical';\n      this.disabledBehavior = 'all';\n      this.layoutDelegate = new DOMLayoutDelegate(this.ref);\n    }\n\n    // If this is a vertical stack, remove the left/right methods completely\n    // so they aren't called by useDroppableCollection.\n    if (this.layout === 'stack' && this.orientation === 'vertical') {\n      this.getKeyLeftOf = undefined;\n      this.getKeyRightOf = undefined;\n    }\n  }\n\n  private isDisabled(item: Node<unknown>) {\n    return this.disabledBehavior === 'all' && (item.props?.isDisabled || this.disabledKeys.has(item.key));\n  }\n\n  private findNextNonDisabled(key: Key | null, getNext: (key: Key) => Key | null): Key | null {\n    let nextKey = key;\n    while (nextKey != null) {\n      let item = this.collection.getItem(nextKey);\n      if (item?.type === 'item' && !this.isDisabled(item)) {\n        return nextKey;\n      }\n\n      nextKey = getNext(nextKey);\n    }\n\n    return null;\n  }\n\n  getNextKey(key: Key) {\n    let nextKey: Key | null = key;\n    nextKey = this.collection.getKeyAfter(nextKey);\n    return this.findNextNonDisabled(nextKey, key => this.collection.getKeyAfter(key));\n  }\n\n  getPreviousKey(key: Key) {\n    let nextKey: Key | null = key;\n    nextKey = this.collection.getKeyBefore(nextKey);\n    return this.findNextNonDisabled(nextKey, key => this.collection.getKeyBefore(key));\n  }\n\n  private findKey(\n    key: Key,\n    nextKey: (key: Key) => Key | null,\n    shouldSkip: (prevRect: Rect, itemRect: Rect) => boolean\n  ) {\n    let tempKey: Key | null = key;\n    let itemRect = this.layoutDelegate.getItemRect(tempKey);\n    if (!itemRect || tempKey == null) {\n      return null;\n    }\n\n    // Find the item above or below in the same column.\n    let prevRect = itemRect;\n    do {\n      tempKey = nextKey(tempKey);\n      if (tempKey == null) {\n        break;\n      }\n      itemRect = this.layoutDelegate.getItemRect(tempKey);\n    } while (itemRect && shouldSkip(prevRect, itemRect) && tempKey != null);\n\n    return tempKey;\n  }\n\n  private isSameRow(prevRect: Rect, itemRect: Rect) {\n    return prevRect.y === itemRect.y || prevRect.x !== itemRect.x;\n  }\n\n  private isSameColumn(prevRect: Rect, itemRect: Rect) {\n    return prevRect.x === itemRect.x || prevRect.y !== itemRect.y;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getNextKey(key), this.isSameRow);\n    } else {\n      return this.getNextKey(key);\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getPreviousKey(key), this.isSameRow);\n    } else {\n      return this.getPreviousKey(key);\n    }\n  }\n\n  private getNextColumn(key: Key, right: boolean) {\n    return right ? this.getPreviousKey(key) : this.getNextKey(key);\n  }\n\n  getKeyRightOf?(key: Key) {\n    // This is a temporary solution for CardView until we refactor useSelectableCollection.\n    // https://github.com/orgs/adobe/projects/19/views/32?pane=issue&itemId=77825042\n    let layoutDelegateMethod = this.direction === 'ltr' ? 'getKeyRightOf' : 'getKeyLeftOf';\n    if (this.layoutDelegate[layoutDelegateMethod]) {\n      key = this.layoutDelegate[layoutDelegateMethod](key);\n      return this.findNextNonDisabled(key, key => this.layoutDelegate[layoutDelegateMethod](key));\n    }\n\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'rtl');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'rtl'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'rtl');\n    }\n\n    return null;\n  }\n\n  getKeyLeftOf?(key: Key) {\n    let layoutDelegateMethod = this.direction === 'ltr' ? 'getKeyLeftOf' : 'getKeyRightOf';\n    if (this.layoutDelegate[layoutDelegateMethod]) {\n      key = this.layoutDelegate[layoutDelegateMethod](key);\n      return this.findNextNonDisabled(key, key => this.layoutDelegate[layoutDelegateMethod](key));\n    }\n\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'ltr');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'ltr'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'ltr');\n    }\n\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    return this.findNextNonDisabled(key, key => this.collection.getKeyAfter(key));\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    return this.findNextNonDisabled(key, key => this.collection.getKeyBefore(key));\n  }\n\n  getKeyPageAbove(key: Key) {\n    let menu = this.ref.current;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    if (menu && !isScrollable(menu)) {\n      return this.getFirstKey();\n    }\n\n    let nextKey: Key | null = key;\n    if (this.orientation === 'horizontal') {\n      let pageX = Math.max(0, itemRect.x + itemRect.width - this.layoutDelegate.getVisibleRect().width);\n\n      while (itemRect && itemRect.x > pageX && nextKey != null) {\n        nextKey = this.getKeyAbove(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    } else {\n      let pageY = Math.max(0, itemRect.y + itemRect.height - this.layoutDelegate.getVisibleRect().height);\n\n      while (itemRect && itemRect.y > pageY && nextKey != null) {\n        nextKey = this.getKeyAbove(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    }\n\n    return nextKey ?? this.getFirstKey();\n  }\n\n  getKeyPageBelow(key: Key) {\n    let menu = this.ref.current;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    if (menu && !isScrollable(menu)) {\n      return this.getLastKey();\n    }\n\n    let nextKey: Key | null = key;\n    if (this.orientation === 'horizontal') {\n      let pageX = Math.min(this.layoutDelegate.getContentSize().width, itemRect.y - itemRect.width + this.layoutDelegate.getVisibleRect().width);\n\n      while (itemRect && itemRect.x < pageX && nextKey != null) {\n        nextKey = this.getKeyBelow(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    } else {\n      let pageY = Math.min(this.layoutDelegate.getContentSize().height, itemRect.y - itemRect.height + this.layoutDelegate.getVisibleRect().height);\n\n      while (itemRect && itemRect.y < pageY && nextKey != null) {\n        nextKey = this.getKeyBelow(nextKey);\n        itemRect = nextKey == null ? null : this.layoutDelegate.getItemRect(nextKey);\n      }\n    }\n\n    return nextKey ?? this.getLastKey();\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey || this.getFirstKey();\n    while (key != null) {\n      let item = collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      let substring = item.textValue.slice(0, search.length);\n      if (item.textValue && this.collator.compare(substring, search) === 0) {\n        return key;\n      }\n\n      key = this.getNextKey(key);\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSelectableCollectionOptions, useSelectableCollection} from './useSelectableCollection';\nimport {Collection, DOMAttributes, Key, KeyboardDelegate, LayoutDelegate, Node} from '@react-types/shared';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {useCollator} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface AriaSelectableListOptions extends Omit<AriaSelectableCollectionOptions, 'keyboardDelegate'> {\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * By default this uses the DOM, but this can be overridden to implement things like\n   * virtualized scrolling.\n   */\n  layoutDelegate?: LayoutDelegate,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>\n}\n\nexport interface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: DOMAttributes\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: AriaSelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    layoutDelegate\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let disabledBehavior = selectionManager.disabledBehavior;\n  let delegate = useMemo(() => (\n    keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      disabledKeys,\n      disabledBehavior,\n      ref,\n      collator,\n      layoutDelegate\n    })\n  ), [keyboardDelegate, layoutDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n\n  let {collectionProps} = useSelectableCollection({\n    ...props,\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, DisabledBehavior, Key, KeyboardDelegate, LayoutDelegate, Node, Rect, RefObject, Size} from '@react-types/shared';\nimport {DOMLayoutDelegate} from '@react-aria/selection';\nimport {getChildNodes, getFirstItem, getLastItem, getNthItem} from '@react-stately/collections';\nimport {GridCollection} from '@react-types/grid';\n\nexport interface GridKeyboardDelegateOptions<C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  disabledBehavior?: DisabledBehavior,\n  ref?: RefObject<HTMLElement | null>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layoutDelegate?: LayoutDelegate,\n  /** @deprecated - Use layoutDelegate instead. */\n  layout?: DeprecatedLayout,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected disabledBehavior: DisabledBehavior;\n  protected direction: Direction;\n  protected collator: Intl.Collator | undefined;\n  protected layoutDelegate: LayoutDelegate;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.disabledBehavior = options.disabledBehavior || 'all';\n    this.direction = options.direction;\n    this.collator = options.collator;\n    if (!options.layout && !options.ref) {\n      throw new Error('Either a layout or a ref must be specified.');\n    }\n    this.layoutDelegate = options.layoutDelegate || (options.layout ? new DeprecatedLayoutDelegate(options.layout) : new DOMLayoutDelegate(options.ref!));\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  private isDisabled(item: Node<unknown>) {\n    return this.disabledBehavior === 'all' && (item.props?.isDisabled || this.disabledKeys.has(item.key));\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      if (!this.isDisabled(item) && (!pred || pred(item))) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n    return null;\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      if (!this.isDisabled(item) && (!pred || pred(item))) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        return null;\n      }\n    }\n    return null;\n  }\n\n  getKeyBelow(fromKey: Key) {\n    let key: Key | null = fromKey;\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return null;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey ?? null;\n    }\n    if (key == null) {\n      return null;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key, (item => item.type === 'item'));\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        if (!item) {\n          return null;\n        }\n        return getNthItem(getChildNodes(item, this.collection), startItem.index ?? 0)?.key ?? null;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n    return null;\n  }\n\n  getKeyAbove(fromKey: Key) {\n    let key: Key | null = fromKey;\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return null;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey ?? null;\n    }\n    if (key == null) {\n      return null;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key, item => item.type === 'item');\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        if (!item) {\n          return null;\n        }\n        return getNthItem(getChildNodes(item, this.collection), startItem.index ?? 0)?.key || null;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n    return null;\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = getChildNodes(item, this.collection);\n      return (this.direction === 'rtl'\n        ? getLastItem(children)?.key\n        : getFirstItem(children)?.key) ?? null;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item) && item.parentKey != null) {\n      let parent = this.collection.getItem(item.parentKey);\n      if (!parent) {\n        return null;\n      }\n      let children = getChildNodes(parent, this.collection);\n      let next = (this.direction === 'rtl'\n        ? getNthItem(children, item.index - 1)\n        : getNthItem(children, item.index + 1)) ?? null;\n\n      if (next) {\n        return next.key ?? null;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey ?? null;\n      }\n\n      return (this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key)) ?? null;\n    }\n    return null;\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = getChildNodes(item, this.collection);\n      return (this.direction === 'rtl'\n        ? getFirstItem(children)?.key\n        : getLastItem(children)?.key) ?? null;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item) && item.parentKey != null) {\n      let parent = this.collection.getItem(item.parentKey);\n      if (!parent) {\n        return null;\n      }\n      let children = getChildNodes(parent, this.collection);\n      let prev = (this.direction === 'rtl'\n        ? getNthItem(children, item.index + 1)\n        : getNthItem(children, item.index - 1)) ?? null;\n\n      if (prev) {\n        return prev.key ?? null;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey ?? null;\n      }\n\n      return (this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key)) ?? null;\n    }\n    return null;\n  }\n\n  getFirstKey(fromKey?: Key, global?: boolean) {\n    let key: Key | null = fromKey ?? null;\n    let item: Node<T> | undefined | null;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global && item.parentKey != null) {\n        let parent = this.collection.getItem(item.parentKey);\n        if (!parent) {\n          return null;\n        }\n        return getFirstItem(getChildNodes(parent, this.collection))?.key ?? null;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey(undefined, item => item.type === 'item');\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if (key != null && ((item && this.isCell(item) && global) || this.focusMode === 'cell')) {\n      let item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      key = getFirstItem(getChildNodes(item, this.collection))?.key ?? null;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(fromKey?: Key, global?: boolean) {\n    let key: Key | null = fromKey ?? null;\n    let item: Node<T> | undefined | null;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global && item.parentKey != null) {\n        let parent = this.collection.getItem(item.parentKey);\n        if (!parent) {\n          return null;\n        }\n        let children = getChildNodes(parent, this.collection);\n        return getLastItem(children)?.key ?? null;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey(undefined, item => item.type === 'item');\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if (key != null && ((item && this.isCell(item) && global) || this.focusMode === 'cell')) {\n      let item = this.collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n      let children = getChildNodes(item, this.collection);\n      key = getLastItem(children)?.key ?? null;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getKeyPageAbove(fromKey: Key) {\n    let key: Key | null = fromKey;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.y + itemRect.height - this.layoutDelegate.getVisibleRect().height);\n\n    while (itemRect && itemRect.y > pageY && key != null) {\n      key = this.getKeyAbove(key) ?? null;\n      if (key == null) {\n        break;\n      }\n      itemRect = this.layoutDelegate.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(fromKey: Key) {\n    let key: Key | null = fromKey;\n    let itemRect = this.layoutDelegate.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.layoutDelegate.getVisibleRect().height;\n    let pageY = Math.min(this.layoutDelegate.getContentSize().height, itemRect.y + pageHeight);\n\n    while (itemRect && (itemRect.y + itemRect.height) < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      // If nextKey is undefined, we've reached the last row already\n      if (nextKey == null) {\n        break;\n      }\n\n      itemRect = this.layoutDelegate.getItemRect(nextKey);\n      key = nextKey;\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    let key: Key | null = fromKey ?? null;\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (!startItem) {\n      return null;\n    }\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey ?? null;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return getFirstItem(getChildNodes(item, this.collection))?.key ?? null;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key, item => item.type === 'item');\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n\n/* Backward compatibility for old Virtualizer Layout interface. */\ninterface DeprecatedLayout {\n  getLayoutInfo(key: Key): DeprecatedLayoutInfo,\n  getContentSize(): Size,\n  virtualizer: DeprecatedVirtualizer\n}\n\ninterface DeprecatedLayoutInfo {\n  rect: Rect\n}\n\ninterface DeprecatedVirtualizer {\n  visibleRect: Rect\n}\n\nclass DeprecatedLayoutDelegate implements LayoutDelegate {\n  layout: DeprecatedLayout;\n\n  constructor(layout: DeprecatedLayout) {\n    this.layout = layout;\n  }\n\n  getContentSize(): Size {\n    return this.layout.getContentSize();\n  }\n\n  getItemRect(key: Key): Rect | null {\n    return this.layout.getLayoutInfo(key)?.rect || null;\n  }\n\n  getVisibleRect(): Rect {\n    return this.layout.virtualizer.visibleRect;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport type {Key, KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction?: (key: Key) => void,\n    onCellAction?: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n", "{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n", "{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n", "{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n", "{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n", "{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n", "{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n", "{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n", "{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n", "{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n", "{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n", "{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n", "{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n", "{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n", "{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n", "{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n", "{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n", "{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n", "{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n", "{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n", "{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n", "{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n", "{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n", "{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n", "{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n", "{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n", "{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n", "{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n", "{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n", "{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n", "{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n", "{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n", "{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n", "{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n", "{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\ntype Assertiveness = 'assertive' | 'polite';\n\n/* Inspired by https://github.com/AlmeroSteyn/react-aria-live */\nconst LIVEREGION_TIMEOUT_DELAY = 7000;\n\nlet liveAnnouncer: LiveAnnouncer | null = null;\n\ntype Message = string | {'aria-labelledby': string};\n\n/**\n * Announces the message using screen reader technology.\n */\nexport function announce(\n  message: Message,\n  assertiveness: Assertiveness = 'assertive',\n  timeout = LIVEREGION_TIMEOUT_DELAY\n) {\n  if (!liveAnnouncer) {\n    liveAnnouncer = new LiveAnnouncer();\n    // wait for the live announcer regions to be added to the dom, then announce\n    // otherwise Safari won't announce the message if it's added too quickly\n    // found most times less than 100ms were not consistent when announcing with Safari\n\n    // IS_REACT_ACT_ENVIRONMENT is used by React 18. Previous versions checked for the `jest` global.\n    // https://github.com/reactwg/react-18/discussions/102\n    // if we're in a test environment, announce without waiting\n    // @ts-ignore\n    if (!(typeof IS_REACT_ACT_ENVIRONMENT === 'boolean' ? IS_REACT_ACT_ENVIRONMENT : typeof jest !== 'undefined')) {\n      setTimeout(() => {\n        if (liveAnnouncer?.isAttached()) {\n          liveAnnouncer?.announce(message, assertiveness, timeout);\n        }\n      }, 100);\n    } else {\n      liveAnnouncer.announce(message, assertiveness, timeout);\n    }\n  } else {\n    liveAnnouncer.announce(message, assertiveness, timeout);\n  }\n}\n\n/**\n * Stops all queued announcements.\n */\nexport function clearAnnouncer(assertiveness: Assertiveness) {\n  if (liveAnnouncer) {\n    liveAnnouncer.clear(assertiveness);\n  }\n}\n\n/**\n * Removes the announcer from the DOM.\n */\nexport function destroyAnnouncer() {\n  if (liveAnnouncer) {\n    liveAnnouncer.destroy();\n    liveAnnouncer = null;\n  }\n}\n\n// LiveAnnouncer is implemented using vanilla DOM, not React. That's because as of React 18\n// ReactDOM.render is deprecated, and the replacement, ReactDOM.createRoot is moved into a\n// subpath import `react-dom/client`. That makes it hard for us to support multiple React versions.\n// As a global API, we can't use portals without introducing a breaking API change. LiveAnnouncer\n// is simple enough to implement without React, so that's what we do here.\n// See this discussion for more details: https://github.com/reactwg/react-18/discussions/125#discussioncomment-2382638\nclass LiveAnnouncer {\n  node: HTMLElement | null = null;\n  assertiveLog: HTMLElement | null = null;\n  politeLog: HTMLElement | null = null;\n\n  constructor() {\n    if (typeof document !== 'undefined') {\n      this.node = document.createElement('div');\n      this.node.dataset.liveAnnouncer = 'true';\n      // copied from VisuallyHidden\n      Object.assign(this.node.style, {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        clipPath: 'inset(50%)',\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        width: '1px',\n        whiteSpace: 'nowrap'\n      });\n\n      this.assertiveLog = this.createLog('assertive');\n      this.node.appendChild(this.assertiveLog);\n\n      this.politeLog = this.createLog('polite');\n      this.node.appendChild(this.politeLog);\n\n      document.body.prepend(this.node);\n    }\n  }\n\n  isAttached() {\n    return this.node?.isConnected;\n  }\n\n  createLog(ariaLive: string) {\n    let node = document.createElement('div');\n    node.setAttribute('role', 'log');\n    node.setAttribute('aria-live', ariaLive);\n    node.setAttribute('aria-relevant', 'additions');\n    return node;\n  }\n\n  destroy() {\n    if (!this.node) {\n      return;\n    }\n\n    document.body.removeChild(this.node);\n    this.node = null;\n  }\n\n  announce(message: Message, assertiveness = 'assertive', timeout = LIVEREGION_TIMEOUT_DELAY) {\n    if (!this.node) {\n      return;\n    }\n\n    let node = document.createElement('div');\n    if (typeof message === 'object') {\n      // To read an aria-labelledby, the element must have an appropriate role, such as img.\n      node.setAttribute('role', 'img');\n      node.setAttribute('aria-labelledby', message['aria-labelledby']);\n    } else {\n      node.textContent = message;\n    }\n\n    if (assertiveness === 'assertive') {\n      this.assertiveLog?.appendChild(node);\n    } else {\n      this.politeLog?.appendChild(node);\n    }\n\n    if (message !== '') {\n      setTimeout(() => {\n        node.remove();\n      }, timeout);\n    }\n  }\n\n  clear(assertiveness: Assertiveness) {\n    if (!this.node) {\n      return;\n    }\n\n    if ((!assertiveness || assertiveness === 'assertive') && this.assertiveLog) {\n      this.assertiveLog.innerHTML = '';\n    }\n\n    if ((!assertiveness || assertiveness === 'polite') && this.politeLog) {\n      this.politeLog.innerHTML = '';\n    }\n  }\n}\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Key, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useRef} from 'react';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getTextValue?.(key) ?? state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages: string[] = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message: string | undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, Key, KeyboardDelegate, RefObject} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {useCallback, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHasTabbableChild} from '@react-aria/focus';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement | null>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement | null>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n  let {selectionManager: manager} = state;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    disabledBehavior,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: manager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let onFocus = useCallback((e) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n  }, [manager]);\n\n  // Continue to track collection focused state even if keyboard navigation is disabled\n  let navDisabledHandlers = useMemo(() => ({\n    onBlur: collectionProps.onBlur,\n    onFocus\n  }), [onFocus, collectionProps.onBlur]);\n\n  let hasTabbableChild = useHasTabbableChild(ref, {\n    isDisabled: state.collection.size !== 0\n  });\n\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': manager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,\n    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.\n    (state.collection.size === 0 && {tabIndex: hasTabbableChild ? -1 : 0}) || undefined,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from '@react-aria/utils';\nimport {DOMAttributes, FocusableElement, RefObject} from '@react-types/shared';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {SelectableItemStates, useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: GridNode<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria extends SelectableItemStates {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement | null>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions} = gridMap.get(state)!;\n  let onRowAction = actions.onRowAction ? () => actions.onRowAction?.(node.key) : onAction;\n  let {itemProps, ...states} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction || node?.props?.onAction ? chain(node?.props?.onAction, onRowAction) : undefined,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    'aria-disabled': states.isDisabled || undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    ...states\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Key, RefObject} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {getScrollParent, mergeProps, scrollIntoViewport} from '@react-aria/utils';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {KeyboardEvent as ReactKeyboardEvent, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement | null>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state)!;\n\n  // We need to track the key of the item at the time it was last focused so that we force\n  // focus to go to the item when the DOM node is reused for a different item in a virtualizer.\n  let keyWhenFocused = useRef<Key | null>(null);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    if (ref.current) {\n      let treeWalker = getFocusableTreeWalker(ref.current);\n      if (focusMode === 'child') {\n        // If focus is already on a focusable child within the cell, early return so we don't shift focus\n        if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n          return;\n        }\n\n        let focusable = state.selectionManager.childFocusStrategy === 'last'\n          ? last(treeWalker)\n          : treeWalker.firstChild() as FocusableElement;\n        if (focusable) {\n          focusSafely(focusable);\n          return;\n        }\n      }\n\n      if (\n        (keyWhenFocused.current != null && node.key !== keyWhenFocused.current) ||\n        !ref.current.contains(document.activeElement)\n      ) {\n        focusSafely(ref.current);\n      }\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled || !ref.current || !document.activeElement) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable: FocusableElement | null = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (focusable) {\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf?.(node.key);\n          if (prev !== node.key) {\n            // We prevent the capturing event from reaching children of the cell, e.g. pickers.\n            // We want arrow keys to navigate to the next cell instead. We need to re-dispatch\n            // the event from a higher parent so it still bubbles and gets handled by useSelectableCollection.\n            ref.current.parentElement?.dispatchEvent(\n              new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n            );\n            break;\n          }\n\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable: FocusableElement | null = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (focusable) {\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          let next = keyboardDelegate.getKeyRightOf?.(node.key);\n          if (next !== node.key) {\n            // We prevent the capturing event from reaching children of the cell, e.g. pickers.\n            // We want arrow keys to navigate to the next cell instead. We need to re-dispatch\n            // the event from a higher parent so it still bubbles and gets handled by useSelectableCollection.\n            ref.current.parentElement?.dispatchEvent(\n              new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n            );\n            break;\n          }\n\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement?.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    keyWhenFocused.current = node.key;\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  // When pressing with a pointer and cell selection is not enabled, usePress will be applied to the\n  // row rather than the cell. However, when the row is draggable, usePress cannot preventDefault\n  // on pointer down, so the browser will try to focus the cell which has a tabIndex applied.\n  // To avoid this, remove the tabIndex from the cell briefly on pointer down.\n  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null) {\n    gridCellProps.onPointerDown = (e) => {\n      let el = e.currentTarget;\n      let tabindex = el.getAttribute('tabindex');\n      el.removeAttribute('tabindex');\n      requestAnimationFrame(() => {\n        if (tabindex != null) {\n          el.setAttribute('tabindex', tabindex);\n        }\n      });\n    };\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement | null = null;\n  let last: FocusableElement | null = null;\n  do {\n    last = walker.lastChild() as FocusableElement | null;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n", "import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from '@react-types/shared';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  // Checkbox should always toggle selection, regardless of selectionBehavior.\n  let onChange = () => manager.toggleSelection(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/grid');\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n", "/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getChildNodes, getFirstItem, getNthItem} from '@react-stately/collections';\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key, Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return null;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = getFirstItem(getChildNodes(startItem, this.collection));\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return null;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      if (!firstItem) {\n        return null;\n      }\n      return getNthItem(getChildNodes(firstItem, this.collection), startItem.index)?.key ?? null;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return null;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = startItem.parentKey != null ? this.collection.getItem(startItem.parentKey) : null;\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return null;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    let superItem = superKey != null ? this.collection.getItem(superKey) : null;\n    if (superItem && superItem.type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of getChildNodes(row, this.collection)) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n\n    return null;\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...getChildNodes(row, this.collection)];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n\n    return null;\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem?.type === 'cell') {\n      key = startItem.parentKey ?? null;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      if (!item) {\n        return null;\n      }\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of getChildNodes(item, this.collection)) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem?.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet _tableNestedRows = false;\n\nexport function enableTableNestedRows() {\n  _tableNestedRows = true;\n}\n\nexport function tableNestedRows() {\n  return _tableNestedRows;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key, LayoutDelegate, Rect, RefObject, Size} from '@react-types/shared';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TreeGridState} from '@react-stately/table';\nimport {useCollator, useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface AriaTableProps extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layoutDelegate?: LayoutDelegate,\n  /** @deprecated - Use layoutDelegate instead. */\n  layout?: DeprecatedLayout\n}\n\ninterface DeprecatedLayout {\n  getLayoutInfo(key: Key): DeprecatedLayoutInfo,\n  getContentSize(): Size,\n  virtualizer: DeprecatedVirtualizer\n}\n\ninterface DeprecatedLayoutInfo {\n  rect: Rect\n}\n\ninterface DeprecatedVirtualizer {\n  visibleRect: Rect\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: AriaTableProps, state: TableState<T> | TreeGridState<T>, ref: RefObject<HTMLElement | null>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layoutDelegate,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let disabledBehavior = state.selectionManager.disabledBehavior;\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    disabledBehavior,\n    ref,\n    direction,\n    collator,\n    layoutDelegate,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, disabledBehavior, ref, direction, collator, layoutDelegate, layout]);\n  let id = useId(props.id);\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  if (tableNestedRows() && 'expandedKeys' in state) {\n    gridProps.role = 'treegrid';\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue ?? '';\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {columnName}) : undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    if (sortDescription) {\n      announce(sortDescription, 'assertive', 500);\n    }\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, RefObject} from '@react-types/shared';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {TableState} from '@react-stately/table';\nimport {useEffect} from 'react';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaTableColumnHeaderProps<T> {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<T>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean\n}\n\nexport interface TableColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: AriaTableColumnHeaderProps<T>, state: TableState<T>, ref: RefObject<FocusableElement | null>): TableColumnHeaderAria {\n  let {node} = props;\n  let allowsSorting = node.props.allowsSorting;\n  // if there are no focusable children, the column header will focus the cell\n  let {gridCellProps} = useGridCell({...props, focusMode: 'child'}, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n\n  let {pressProps} = usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  let ariaSort: DOMAttributes['aria-sort'] | undefined = undefined;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  let shouldDisableFocus = state.collection.size === 0;\n  useEffect(() => {\n    if (shouldDisableFocus && state.selectionManager.focusedKey === node.key) {\n      state.selectionManager.setFocusedKey(null);\n    }\n  }, [shouldDisableFocus, state.selectionManager, node.key]);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(\n        gridCellProps,\n        pressProps,\n        focusableProps,\n        descriptionProps,\n        // If the table is empty, make all column headers untabbable\n        shouldDisableFocus ? {tabIndex: -1} : null\n      ),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : undefined,\n      'aria-sort': ariaSort\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement, RefObject} from '@react-types/shared';\nimport {getLastItem} from '@react-stately/collections';\nimport {getRowLabelledBy} from './utils';\nimport type {GridNode} from '@react-types/grid';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {HTMLAttributes} from 'react';\nimport {mergeProps, useSyntheticLinkProps} from '@react-aria/utils';\nimport {TableCollection} from '@react-types/table';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState, TreeGridState} from '@react-stately/table';\nimport {useLocale} from '@react-aria/i18n';\n\nconst EXPANSION_KEYS = {\n  expand: {\n    ltr: 'ArrowRight',\n    rtl: 'ArrowLeft'\n  },\n  'collapse': {\n    ltr: 'ArrowLeft',\n    rtl: 'ArrowRight'\n  }\n};\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T> | TreeGridState<T>, ref: RefObject<FocusableElement | null>): GridRowAria {\n  let {node, isVirtualized} = props;\n  let {rowProps, ...states} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  let {direction} = useLocale();\n\n  if (isVirtualized && !(tableNestedRows() && 'expandedKeys' in state)) {\n    rowProps['aria-rowindex'] = node.index + 1 + state.collection.headerRows.length; // aria-rowindex is 1 based\n  } else {\n    delete rowProps['aria-rowindex'];\n  }\n\n  let treeGridRowProps: HTMLAttributes<HTMLElement> = {};\n  if (tableNestedRows() && 'expandedKeys' in state) {\n    let treeNode = state.keyMap.get(node.key);\n    if (treeNode != null) {\n      let hasChildRows = treeNode.props?.UNSTABLE_childItems || treeNode.props?.children?.length > state.userColumnCount;\n      treeGridRowProps = {\n        onKeyDown: (e) => {\n          if ((e.key === EXPANSION_KEYS['expand'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== 'all' && !state.expandedKeys.has(treeNode.key)) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          } else if ((e.key === EXPANSION_KEYS['collapse'][direction]) && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === 'all' || state.expandedKeys.has(treeNode.key))) {\n            state.toggleKey(treeNode.key);\n            e.stopPropagation();\n          }\n        },\n        'aria-expanded': hasChildRows ? state.expandedKeys === 'all' || state.expandedKeys.has(node.key) : undefined,\n        'aria-level': treeNode.level,\n        'aria-posinset': (treeNode.indexOfType ?? 0) + 1,\n        'aria-setsize': treeNode.level > 1 ?\n          ((getLastItem(state.keyMap.get(treeNode.parentKey!)?.childNodes ?? []) as GridNode<T>)?.indexOfType ?? 0) + 1 :\n          ((getLastItem(state.collection.body.childNodes) as GridNode<T>)?.indexOfType ?? 0) + 1\n      };\n    }\n  }\n\n  let syntheticLinkProps = useSyntheticLinkProps(node.props);\n  let linkProps = states.hasAction ? syntheticLinkProps : {};\n  return {\n    rowProps: {\n      ...mergeProps(rowProps, treeGridRowProps, linkProps),\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    ...states\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, RefObject} from '@react-types/shared';\nimport {GridRowProps} from '@react-aria/grid';\nimport {tableNestedRows} from '@react-stately/flags';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<Element | null>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized && !(tableNestedRows() && 'expandedKeys' in state)) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, RefObject} from '@react-types/shared';\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\nexport interface AriaTableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: AriaTableCellProps, state: TableState<T>, ref: RefObject<FocusableElement | null>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n  let columnKey = props.node.column?.key;\n  if (columnKey != null && state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey!, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from '@react-types/shared';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface TableSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\nexport interface TableSelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: AriaTableSelectionCheckboxProps, state: TableState<T>): TableSelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): TableSelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/table');\n\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useTable} from './useTable';\nexport {useTableColumnHeader} from './useTableColumnHeader';\nexport {useTableRow} from './useTableRow';\nexport {useTableHeaderRow} from './useTableHeaderRow';\nexport {useTableCell} from './useTableCell';\nexport {useTableSelectionCheckbox, useTableSelectAllCheckbox} from './useTableSelectionCheckbox';\nexport {useTableColumnResize} from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n\nexport type {AriaTableProps} from './useTable';\nexport type {GridAria, GridRowAria, GridRowProps} from '@react-aria/grid';\nexport type {AriaTableColumnHeaderProps, TableColumnHeaderAria} from './useTableColumnHeader';\nexport type {AriaTableCellProps, TableCellAria} from './useTableCell';\nexport type {TableHeaderRowAria} from './useTableHeaderRow';\nexport type {AriaTableSelectionCheckboxProps, TableSelectionCheckboxAria, TableSelectAllCheckboxAria} from './useTableSelectionCheckbox';\nexport type {AriaTableColumnResizeProps, TableColumnResizeAria} from './useTableColumnResize';\n", "\"use client\";\n\n// src/use-checkbox-group.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { checkboxGroup } from \"@nextui-org/theme\";\nimport { useCheckboxGroup as useReactAriaCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, safeAriaLabel } from \"@nextui-org/shared-utils\";\nimport { FormContext, useSlottedContext } from \"@nextui-org/form\";\nfunction useCheckboxGroup(props) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const { validationBehavior: formValidationBehavior } = useSlottedContext(FormContext) || {};\n  const {\n    as,\n    ref,\n    classNames,\n    children,\n    label,\n    radius,\n    value,\n    name,\n    defaultValue,\n    isInvalid: isInvalidProp,\n    validationState,\n    size = \"md\",\n    color = \"primary\",\n    orientation = \"vertical\",\n    lineThrough = false,\n    isDisabled = false,\n    validationBehavior = (_a = formValidationBehavior != null ? formValidationBehavior : globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _a : \"native\",\n    disableAnimation = (_b = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false,\n    isReadOnly,\n    isRequired,\n    onValueChange,\n    description,\n    errorMessage,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const checkboxGroupProps = useMemo(() => {\n    return {\n      ...otherProps,\n      value,\n      name,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], label),\n      defaultValue,\n      isRequired,\n      isReadOnly,\n      orientation,\n      validationBehavior,\n      isInvalid: validationState === \"invalid\" || isInvalidProp,\n      onChange: chain(props.onChange, onValueChange)\n    };\n  }, [\n    value,\n    name,\n    label,\n    defaultValue,\n    isRequired,\n    isReadOnly,\n    orientation,\n    onValueChange,\n    isInvalidProp,\n    validationState,\n    validationBehavior,\n    otherProps[\"aria-label\"],\n    otherProps\n  ]);\n  const groupState = useCheckboxGroupState(checkboxGroupProps);\n  const {\n    labelProps,\n    groupProps,\n    descriptionProps,\n    errorMessageProps,\n    validationErrors,\n    validationDetails\n  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      radius,\n      lineThrough,\n      isInvalid: groupState.isInvalid,\n      isDisabled,\n      disableAnimation,\n      validationBehavior,\n      groupState\n    }),\n    [\n      size,\n      color,\n      radius,\n      lineThrough,\n      isDisabled,\n      disableAnimation,\n      validationBehavior,\n      groupState.value,\n      groupState.isDisabled,\n      groupState.isReadOnly,\n      groupState.isInvalid,\n      groupState.isSelected\n    ]\n  );\n  const slots = useMemo(\n    () => checkboxGroup({ isRequired, isInvalid: groupState.isInvalid, disableAnimation }),\n    [isRequired, groupState.isInvalid, , disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getGroupProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(\n        groupProps,\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        })\n      )\n    };\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  const getLabelProps = useCallback(() => {\n    return {\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),\n      ...labelProps\n    };\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  const getWrapperProps = useCallback(() => {\n    return {\n      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...descriptionProps,\n        className: slots.description({ class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, descriptionProps, classNames == null ? void 0 : classNames.description]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...errorMessageProps,\n        className: slots.errorMessage({ class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]\n  );\n  return {\n    Component,\n    children,\n    label,\n    context,\n    description,\n    isInvalid: groupState.isInvalid,\n    errorMessage: typeof errorMessage === \"function\" ? errorMessage({ isInvalid: groupState.isInvalid, validationErrors, validationDetails }) : errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \")),\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  };\n}\n\nexport {\n  useCheckboxGroup\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {InputHTMLAttributes, LabelHTMLAttributes, useEffect} from 'react';\nimport {mergeProps} from '@react-aria/utils';\nimport {privateValidationStateProp, useFormValidationState} from '@react-stately/form';\nimport {RefObject, ValidationResult} from '@react-types/shared';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFormValidation} from '@react-aria/form';\nimport {usePress} from '@react-aria/interactions';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface CheckboxAria extends ValidationResult {\n  /** Props for the label wrapper element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the checkbox is selected. */\n  isSelected: boolean,\n  /** Whether the checkbox is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the checkbox is disabled. */\n  isDisabled: boolean,\n  /** Whether the checkbox is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(props: AriaCheckboxProps, state: ToggleState, inputRef: RefObject<HTMLInputElement | null>): CheckboxAria {\n  // Create validation state here because it doesn't make sense to add to general useToggleState.\n  let validationState = useFormValidationState({...props, value: state.isSelected});\n  let {isInvalid, validationErrors, validationDetails} = validationState.displayValidation;\n  let {labelProps, inputProps, isSelected, isPressed, isDisabled, isReadOnly} = useToggle({\n    ...props,\n    isInvalid\n  }, state, inputRef);\n\n  useFormValidation(props, validationState, inputRef);\n\n  let {isIndeterminate, isRequired, validationBehavior = 'aria'} = props;\n  useEffect(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) {\n      inputRef.current.indeterminate = !!isIndeterminate;\n    }\n  });\n\n  // Reset validation state on label press for checkbox with a hidden input.\n  let {pressProps} = usePress({\n    isDisabled: isDisabled || isReadOnly,\n    onPress() {\n      // @ts-expect-error\n      let {[privateValidationStateProp]: groupValidationState} = props;\n  \n      let {commitValidation} = groupValidationState\n      ? groupValidationState\n      : validationState;\n      \n      commitValidation();\n    }\n  });\n\n  return {\n    labelProps: mergeProps(labelProps, pressProps),\n    inputProps: {\n      ...inputProps,\n      checked: isSelected,\n      'aria-required': (isRequired && validationBehavior === 'aria') || undefined,\n      required: isRequired && validationBehavior === 'native'\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\n\ninterface CheckboxGroupData {\n  name?: string,\n  descriptionId?: string,\n  errorMessageId?: string,\n  validationBehavior: 'aria' | 'native'\n}\n\nexport const checkboxGroupData = new WeakMap<CheckboxGroupState, CheckboxGroupData>();\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupProps} from '@react-types/checkbox';\nimport {checkboxGroupData} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DOMAttributes, ValidationResult} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\n\nexport interface CheckboxGroupAria extends ValidationResult {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: DOMAttributes,\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the checkbox group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the checkbox group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria {\n  let {isDisabled, name, validationBehavior = 'aria'} = props;\n  let {isInvalid, validationErrors, validationDetails} = state.displayValidation;\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span',\n    isInvalid,\n    errorMessage: props.errorMessage || validationErrors\n  });\n\n  checkboxGroupData.set(state, {\n    name,\n    descriptionId: descriptionProps.id,\n    errorMessageId: errorMessageProps.id,\n    validationBehavior\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin: props.onBlur,\n    onFocusWithin: props.onFocus,\n    onFocusWithinChange: props.onFocusChange\n  });\n\n  return {\n    groupProps: mergeProps(domProps, {\n      role: 'group',\n      'aria-disabled': isDisabled || undefined,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupItemProps} from '@react-types/checkbox';\nimport {CheckboxAria, useCheckbox} from './useCheckbox';\nimport {checkboxGroupData} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DEFAULT_VALIDATION_RESULT, privateValidationStateProp, useFormValidationState} from '@react-stately/form';\nimport {RefObject, ValidationResult} from '@react-types/shared';\nimport {useEffect, useRef} from 'react';\nimport {useToggleState} from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(props: AriaCheckboxGroupItemProps, state: CheckboxGroupState, inputRef: RefObject<HTMLInputElement | null>): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        state.addValue(props.value);\n      } else {\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    }\n  });\n\n  let {name, descriptionId, errorMessageId, validationBehavior} = checkboxGroupData.get(state)!;\n  validationBehavior = props.validationBehavior ?? validationBehavior;\n\n  // Local validation for this checkbox.\n  let {realtimeValidation} = useFormValidationState({\n    ...props,\n    value: toggleState.isSelected,\n    // Server validation is handled at the group level.\n    name: undefined,\n    validationBehavior: 'aria'\n  });\n\n  // Update the checkbox group state when realtime validation changes.\n  let nativeValidation = useRef(DEFAULT_VALIDATION_RESULT);\n  let updateValidation = () => {\n    state.setInvalid(props.value, realtimeValidation.isInvalid ? realtimeValidation : nativeValidation.current);\n  };\n\n  useEffect(updateValidation);\n\n  // Combine group and checkbox level validation.\n  let combinedRealtimeValidation = state.realtimeValidation.isInvalid ? state.realtimeValidation : realtimeValidation;\n  let displayValidation = validationBehavior === 'native' ? state.displayValidation : combinedRealtimeValidation;\n\n  let res = useCheckbox({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || name,\n    isRequired: props.isRequired ?? state.isRequired,\n    validationBehavior,\n    [privateValidationStateProp]: {\n      realtimeValidation: combinedRealtimeValidation,\n      displayValidation,\n      resetValidation: state.resetValidation,\n      commitValidation: state.commitValidation,\n      updateValidation(v: ValidationResult) {\n        nativeValidation.current = v;\n        updateValidation();\n      }\n    }\n  }, toggleState, inputRef);\n\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [\n        props['aria-describedby'],\n        state.isInvalid ? errorMessageId : null,\n        descriptionId\n      ].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupProps} from '@react-types/checkbox';\nimport {FormValidationState, mergeValidation, useFormValidationState} from '@react-stately/form';\nimport {useControlledState} from '@react-stately/utils';\nimport {useRef} from 'react';\nimport {ValidationResult, ValidationState} from '@react-types/shared';\n\nexport interface CheckboxGroupState extends FormValidationState {\n  /** Current selected values. */\n  readonly value: readonly string[],\n\n  /** Whether the checkbox group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the checkbox group is read only. */\n  readonly isReadOnly: boolean,\n\n  /**\n   * The current validation state of the checkbox group.\n   * @deprecated Use `isInvalid` instead.\n   */\n  readonly validationState: ValidationState | null,\n\n  /** Whether the checkbox group is invalid. */\n  readonly isInvalid: boolean,\n\n  /**\n   * Whether the checkboxes in the group are required.\n   * This changes to false once at least one item is selected.\n   */\n  readonly isRequired: boolean,\n\n  /** Returns whether the given value is selected. */\n  isSelected(value: string): boolean,\n\n  /** Sets the selected values. */\n  setValue(value: string[]): void,\n\n  /** Adds a value to the set of selected values. */\n  addValue(value: string): void,\n\n  /** Removes a value from the set of selected values. */\n  removeValue(value: string): void,\n\n  /** Toggles a value in the set of selected values. */\n  toggleValue(value: string): void,\n\n  /** Sets whether one of the checkboxes is invalid. */\n  setInvalid(value: string, validation: ValidationResult): void\n}\n\n/**\n * Provides state management for a checkbox group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useCheckboxGroupState(props: CheckboxGroupProps = {}): CheckboxGroupState {\n  let [selectedValues, setValue] = useControlledState(props.value, props.defaultValue || [], props.onChange);\n  let isRequired = !!props.isRequired && selectedValues.length === 0;\n\n  let invalidValues = useRef(new Map<string, ValidationResult>());\n  let validation = useFormValidationState({\n    ...props,\n    value: selectedValues\n  });\n\n  let isInvalid = validation.displayValidation.isInvalid;\n  const state: CheckboxGroupState = {\n    ...validation,\n    value: selectedValues,\n    setValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n\n      setValue(value);\n    },\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isSelected(value) {\n      return selectedValues.includes(value);\n    },\n    addValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (!selectedValues.includes(value)) {\n        setValue(selectedValues.concat(value));\n      }\n    },\n    removeValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (selectedValues.includes(value)) {\n        setValue(selectedValues.filter(existingValue => existingValue !== value));\n      }\n    },\n    toggleValue(value) {\n      if (props.isReadOnly || props.isDisabled) {\n        return;\n      }\n      if (selectedValues.includes(value)) {\n        setValue(selectedValues.filter(existingValue => existingValue !== value));\n      } else {\n        setValue(selectedValues.concat(value));\n      }\n    },\n    setInvalid(value, v) {\n      let s = new Map(invalidValues.current);\n      if (v.isInvalid) {\n        s.set(value, v);\n      } else {\n        s.delete(value);\n      }\n\n      invalidValues.current = s;\n      validation.updateValidation(mergeValidation(...s.values()));\n    },\n    validationState: props.validationState ?? (isInvalid ? 'invalid' : null),\n    isInvalid,\n    isRequired\n  };\n\n  return state;\n}\n", "\"use client\";\n\n// src/checkbox-group-context.ts\nimport { createContext } from \"@nextui-org/react-utils\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport {\n  CheckboxGroupProvider,\n  useCheckboxGroupContext\n};\n", "\"use client\";\nimport {\n  useCheckboxGroup\n} from \"./chunk-5OP3BFLP.mjs\";\nimport {\n  CheckboxGroupProvider\n} from \"./chunk-ACAJT7GC.mjs\";\n\n// src/checkbox-group.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CheckboxGroup = forwardRef((props, ref) => {\n  const {\n    children,\n    context,\n    label,\n    description,\n    isInvalid,\n    errorMessage,\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  } = useCheckboxGroup({ ...props, ref });\n  return /* @__PURE__ */ jsxs(\"div\", { ...getGroupProps(), children: [\n    label && /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children: label }),\n    /* @__PURE__ */ jsx(\"div\", { ...getWrapperProps(), children: /* @__PURE__ */ jsx(CheckboxGroupProvider, { value: context, children }) }),\n    isInvalid && errorMessage ? /* @__PURE__ */ jsx(\"div\", { ...getErrorMessageProps(), children: errorMessage }) : description ? /* @__PURE__ */ jsx(\"div\", { ...getDescriptionProps(), children: description }) : null\n  ] });\n});\nCheckboxGroup.displayName = \"NextUI.CheckboxGroup\";\nvar checkbox_group_default = CheckboxGroup;\n\nexport {\n  checkbox_group_default\n};\n", "\"use client\";\n\n// src/checkbox-icon.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction CheckIcon(props) {\n  const { isSelected, disableAnimation, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\"svg\", { \"aria-hidden\": \"true\", role: \"presentation\", viewBox: \"0 0 17 18\", ...otherProps, children: /* @__PURE__ */ jsx(\n    \"polyline\",\n    {\n      fill: \"none\",\n      points: \"1 9 7 14 15 4\",\n      stroke: \"currentColor\",\n      strokeDasharray: 22,\n      strokeDashoffset: isSelected ? 44 : 66,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 2,\n      style: !disableAnimation && isSelected ? {\n        transition: \"stroke-dashoffset 250ms linear 0.2s\"\n      } : {}\n    }\n  ) });\n}\nfunction IndeterminateIcon(props) {\n  const { isSelected, disableAnimation, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\"svg\", { stroke: \"currentColor\", strokeWidth: 3, viewBox: \"0 0 24 24\", ...otherProps, children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" }) });\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, ...otherProps } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /* @__PURE__ */ jsx(BaseIcon, { ...otherProps });\n}\n\nexport {\n  CheckboxIcon\n};\n", "\"use client\";\nimport {\n  useCheckboxGroupContext\n} from \"./chunk-ACAJT7GC.mjs\";\n\n// src/use-checkbox.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useCallback, useId } from \"react\";\nimport { useMemo, useRef } from \"react\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { checkbox } from \"@nextui-org/theme\";\nimport { useCallbackRef } from \"@nextui-org/use-callback-ref\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { mergeProps, chain } from \"@react-aria/utils\";\nimport { __DEV__, warn, clsx, dataAttr, safeAriaLabel } from \"@nextui-org/shared-utils\";\nimport {\n  useCheckbox as useReactAriaCheckbox,\n  useCheckboxGroupItem as useReactAriaCheckboxGroupItem\n} from \"@react-aria/checkbox\";\nimport { useSafeLayoutEffect } from \"@nextui-org/use-safe-layout-effect\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { FormContext, useSlottedContext } from \"@nextui-org/form\";\nfunction useCheckbox(props = {}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const globalContext = useProviderContext();\n  const groupContext = useCheckboxGroupContext();\n  const { validationBehavior: formValidationBehavior } = useSlottedContext(FormContext) || {};\n  const isInGroup = !!groupContext;\n  const {\n    as,\n    ref,\n    value = \"\",\n    children,\n    icon,\n    name,\n    isRequired,\n    isReadOnly: isReadOnlyProp = false,\n    autoFocus = false,\n    isSelected: isSelectedProp,\n    size = (_a = groupContext == null ? void 0 : groupContext.size) != null ? _a : \"md\",\n    color = (_b = groupContext == null ? void 0 : groupContext.color) != null ? _b : \"primary\",\n    radius = groupContext == null ? void 0 : groupContext.radius,\n    lineThrough = (_c = groupContext == null ? void 0 : groupContext.lineThrough) != null ? _c : false,\n    isDisabled: isDisabledProp = (_d = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _d : false,\n    disableAnimation = (_f = (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _f : false,\n    validationState,\n    isInvalid: isInvalidProp = validationState ? validationState === \"invalid\" : (_g = groupContext == null ? void 0 : groupContext.isInvalid) != null ? _g : false,\n    isIndeterminate = false,\n    validationBehavior = isInGroup ? groupContext.validationBehavior : (_h = formValidationBehavior != null ? formValidationBehavior : globalContext == null ? void 0 : globalContext.validationBehavior) != null ? _h : \"native\",\n    defaultSelected,\n    classNames,\n    className,\n    onValueChange,\n    validate,\n    ...otherProps\n  } = props;\n  if (groupContext && __DEV__) {\n    if (isSelectedProp) {\n      warn(\n        \"The Checkbox.Group is being used, `isSelected` will be ignored. Use the `value` of the Checkbox.Group instead.\",\n        \"Checkbox\"\n      );\n    }\n    if (defaultSelected) {\n      warn(\n        \"The Checkbox.Group is being used, `defaultSelected` will be ignored. Use the `defaultValue` of the Checkbox.Group instead.\",\n        \"Checkbox\"\n      );\n    }\n  }\n  const Component = as || \"label\";\n  const domRef = useRef(null);\n  const inputRef = useRef(null);\n  let onChange = props.onChange;\n  if (isInGroup) {\n    const dispatch = () => {\n      groupContext.groupState.resetValidation();\n    };\n    onChange = chain(dispatch, onChange);\n  }\n  const labelId = useId();\n  const ariaCheckboxProps = useMemo(\n    () => ({\n      name,\n      value,\n      children,\n      autoFocus,\n      defaultSelected,\n      isIndeterminate,\n      isRequired,\n      isInvalid: isInvalidProp,\n      isSelected: isSelectedProp,\n      isDisabled: isDisabledProp,\n      isReadOnly: isReadOnlyProp,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], children),\n      \"aria-labelledby\": otherProps[\"aria-labelledby\"] || labelId,\n      onChange: onValueChange\n    }),\n    [\n      name,\n      value,\n      children,\n      autoFocus,\n      defaultSelected,\n      isIndeterminate,\n      isRequired,\n      isInvalidProp,\n      isSelectedProp,\n      isDisabledProp,\n      isReadOnlyProp,\n      otherProps[\"aria-label\"],\n      otherProps[\"aria-labelledby\"],\n      labelId,\n      onValueChange\n    ]\n  );\n  const toggleState = useToggleState(ariaCheckboxProps);\n  const validationProps = {\n    isInvalid: isInvalidProp,\n    isRequired,\n    validate,\n    validationState,\n    validationBehavior\n  };\n  const {\n    inputProps,\n    isSelected,\n    isDisabled,\n    isReadOnly,\n    isPressed,\n    isInvalid: isAriaInvalid\n  } = isInGroup ? useReactAriaCheckboxGroupItem(\n    { ...ariaCheckboxProps, ...validationProps },\n    groupContext.groupState,\n    inputRef\n  ) : useReactAriaCheckbox({ ...ariaCheckboxProps, ...validationProps }, toggleState, inputRef);\n  const isInteractionDisabled = isDisabled || isReadOnly;\n  const isInvalid = validationState === \"invalid\" || isInvalidProp || isAriaInvalid;\n  const pressed = isInteractionDisabled ? false : isPressed;\n  const { hoverProps, isHovered } = useHover({\n    isDisabled: inputProps.disabled\n  });\n  const { focusProps, isFocused, isFocusVisible } = useFocusRing({\n    autoFocus: inputProps.autoFocus\n  });\n  const slots = useMemo(\n    () => checkbox({\n      color,\n      size,\n      radius,\n      isInvalid,\n      lineThrough,\n      isDisabled,\n      disableAnimation\n    }),\n    [color, size, radius, isInvalid, lineThrough, isDisabled, disableAnimation]\n  );\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const isInputRefChecked = !!inputRef.current.checked;\n    toggleState.setSelected(isInputRefChecked);\n  }, [inputRef.current]);\n  const onChangeProp = useCallbackRef(onChange);\n  const handleCheckboxChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      onChangeProp == null ? void 0 : onChangeProp(event);\n    },\n    [isReadOnly, isDisabled, onChangeProp]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({ class: baseStyles }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-selected\": dataAttr(isSelected || isIndeterminate),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-pressed\": dataAttr(pressed),\n      \"data-readonly\": dataAttr(inputProps.readOnly),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      ...mergeProps(hoverProps, otherProps)\n    };\n  }, [\n    slots,\n    baseStyles,\n    isDisabled,\n    isSelected,\n    isIndeterminate,\n    isInvalid,\n    isHovered,\n    isFocused,\n    pressed,\n    inputProps.readOnly,\n    isFocusVisible,\n    hoverProps,\n    otherProps\n  ]);\n  const getWrapperProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        \"aria-hidden\": true,\n        className: clsx(slots.wrapper({ class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) }))\n      };\n    },\n    [slots, classNames == null ? void 0 : classNames.wrapper]\n  );\n  const getInputProps = useCallback(() => {\n    return {\n      ref: mergeRefs(inputRef, ref),\n      ...mergeProps(inputProps, focusProps),\n      className: slots.hiddenInput({ class: classNames == null ? void 0 : classNames.hiddenInput }),\n      onChange: chain(inputProps.onChange, handleCheckboxChange)\n    };\n  }, [inputProps, focusProps, handleCheckboxChange, classNames == null ? void 0 : classNames.hiddenInput]);\n  const getLabelProps = useCallback(\n    () => ({\n      id: labelId,\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label })\n    }),\n    [slots, classNames == null ? void 0 : classNames.label, isDisabled, isSelected, isInvalid]\n  );\n  const getIconProps = useCallback(\n    () => ({\n      isSelected,\n      isIndeterminate,\n      disableAnimation,\n      className: slots.icon({ class: classNames == null ? void 0 : classNames.icon })\n    }),\n    [slots, classNames == null ? void 0 : classNames.icon, isSelected, isIndeterminate, disableAnimation]\n  );\n  return {\n    Component,\n    icon,\n    children,\n    isSelected,\n    isDisabled,\n    isInvalid,\n    isFocused,\n    isHovered,\n    isFocusVisible,\n    getBaseProps,\n    getWrapperProps,\n    getInputProps,\n    getLabelProps,\n    getIconProps\n  };\n}\n\nexport {\n  useCheckbox\n};\n", "\"use client\";\nimport {\n  CheckboxIcon\n} from \"./chunk-5E6Z6LLK.mjs\";\nimport {\n  useCheckbox\n} from \"./chunk-STC4KFAA.mjs\";\n\n// src/checkbox.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Checkbox = forwardRef((props, ref) => {\n  const {\n    Component,\n    children,\n    icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n    getBaseProps,\n    getWrapperProps,\n    getInputProps,\n    getIconProps,\n    getLabelProps\n  } = useCheckbox({ ...props, ref });\n  const clonedIcon = typeof icon === \"function\" ? icon(getIconProps()) : cloneElement(icon, getIconProps());\n  return /* @__PURE__ */ jsxs(Component, { ...getBaseProps(), children: [\n    /* @__PURE__ */ jsx(\"input\", { ...getInputProps() }),\n    /* @__PURE__ */ jsx(\"span\", { ...getWrapperProps(), children: clonedIcon }),\n    children && /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children })\n  ] });\n});\nCheckbox.displayName = \"NextUI.Checkbox\";\nvar checkbox_default = Checkbox;\n\nexport {\n  checkbox_default\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocusWithin} from '@react-aria/interactions';\n\nexport interface VisuallyHiddenProps extends DOMAttributes {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: '1px',\n  whiteSpace: 'nowrap'\n};\n\nexport interface VisuallyHiddenAria {\n  visuallyHiddenProps: DOMAttributes\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !isFocusable,\n    onFocusWithinChange: (val) => setFocused(val)\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusWithinProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n", "\"use client\";\n\n// src/table-select-all-checkbox.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableColumnHeader, useTableSelectAllCheckbox } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { Checkbox } from \"@nextui-org/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableSelectAllCheckbox = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    node,\n    slots,\n    state,\n    selectionMode,\n    color,\n    checkboxesProps,\n    disableAnimation,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"th\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { columnHeaderProps } = useTableColumnHeader({ node }, state, domRef);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const { checkboxProps } = useTableSelectAllCheckbox(state);\n  const thStyles = clsx(classNames == null ? void 0 : classNames.th, className, (_a = node.props) == null ? void 0 : _a.className);\n  const isSingleSelectionMode = selectionMode === \"single\";\n  const { onChange, ...otherCheckboxProps } = checkboxProps;\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      ...mergeProps(\n        columnHeaderProps,\n        focusProps,\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        })\n      ),\n      className: (_b = slots.th) == null ? void 0 : _b.call(slots, { class: thStyles }),\n      children: isSingleSelectionMode ? /* @__PURE__ */ jsx(VisuallyHidden, { children: checkboxProps[\"aria-label\"] }) : /* @__PURE__ */ jsx(\n        Checkbox,\n        {\n          color,\n          disableAnimation,\n          onValueChange: onChange,\n          ...mergeProps(checkboxesProps, otherCheckboxProps)\n        }\n      )\n    }\n  );\n});\nTableSelectAllCheckbox.displayName = \"NextUI.TableSelectAllCheckbox\";\nvar table_select_all_checkbox_default = TableSelectAllCheckbox;\n\nexport {\n  table_select_all_checkbox_default\n};\n", "\"use client\";\n\n// src/use-table.ts\nimport { useCallback } from \"react\";\nimport { useTableState } from \"@react-stately/table\";\nimport { useTable as useReactAriaTable } from \"@react-aria/table\";\nimport {\n  mapPropsVariants,\n  useProviderContext\n} from \"@nextui-org/system\";\nimport { table } from \"@nextui-org/theme\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nfunction useTable(originalProps) {\n  var _a;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, table.variantKeys);\n  const {\n    ref,\n    as,\n    baseRef,\n    children,\n    className,\n    classNames,\n    removeWrapper = false,\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\n    isKeyboardNavigationDisabled = false,\n    selectionMode = \"none\",\n    topContentPlacement = \"inside\",\n    bottomContentPlacement = \"inside\",\n    selectionBehavior = selectionMode === \"none\" ? null : \"toggle\",\n    disabledBehavior = \"selection\",\n    showSelectionCheckboxes = selectionMode === \"multiple\" && selectionBehavior !== \"replace\",\n    BaseComponent = \"div\",\n    checkboxesProps,\n    topContent,\n    bottomContent,\n    onRowAction,\n    onCellAction,\n    ...otherProps\n  } = props;\n  const Component = as || \"table\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const domBaseRef = useDOMRef(baseRef);\n  const state = useTableState({\n    ...originalProps,\n    children,\n    showSelectionCheckboxes\n  });\n  if (isKeyboardNavigationDisabled && !state.isKeyboardNavigationDisabled) {\n    state.setKeyboardNavigationDisabled(true);\n  }\n  const { collection } = state;\n  const { layout, ...otherOriginalProps } = originalProps;\n  const { gridProps } = useReactAriaTable({ ...otherOriginalProps }, state, domRef);\n  const isSelectable = selectionMode !== \"none\";\n  const isMultiSelectable = selectionMode === \"multiple\";\n  const slots = useMemo(\n    () => table({\n      ...variantProps,\n      isSelectable,\n      isMultiSelectable\n    }),\n    [objectToDeps(variantProps), isSelectable, isMultiSelectable]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const values = useMemo(\n    () => {\n      var _a2;\n      return {\n        state,\n        slots,\n        isSelectable,\n        collection,\n        classNames,\n        color: originalProps == null ? void 0 : originalProps.color,\n        disableAnimation,\n        checkboxesProps,\n        isHeaderSticky: (_a2 = originalProps == null ? void 0 : originalProps.isHeaderSticky) != null ? _a2 : false,\n        selectionMode,\n        selectionBehavior,\n        disabledBehavior,\n        showSelectionCheckboxes,\n        onRowAction,\n        onCellAction\n      };\n    },\n    [\n      slots,\n      state,\n      collection,\n      isSelectable,\n      classNames,\n      selectionMode,\n      selectionBehavior,\n      checkboxesProps,\n      disabledBehavior,\n      disableAnimation,\n      showSelectionCheckboxes,\n      originalProps == null ? void 0 : originalProps.color,\n      originalProps == null ? void 0 : originalProps.isHeaderSticky,\n      onRowAction,\n      onCellAction\n    ]\n  );\n  const getBaseProps = useCallback(\n    (props2) => ({\n      ...props2,\n      ref: domBaseRef,\n      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) })\n    }),\n    [baseStyles, slots]\n  );\n  const getWrapperProps = useCallback(\n    (props2) => ({\n      ...props2,\n      ref: domBaseRef,\n      className: slots.wrapper({ class: clsx(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className) })\n    }),\n    [classNames == null ? void 0 : classNames.wrapper, slots]\n  );\n  const getTableProps = useCallback(\n    (props2) => ({\n      ...mergeProps(\n        gridProps,\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        props2\n      ),\n      onKeyDownCapture: void 0,\n      ref: domRef,\n      className: slots.table({ class: clsx(classNames == null ? void 0 : classNames.table, props2 == null ? void 0 : props2.className) })\n    }),\n    [classNames == null ? void 0 : classNames.table, shouldFilterDOMProps, slots, gridProps, otherProps]\n  );\n  return {\n    BaseComponent,\n    Component,\n    children,\n    state,\n    collection,\n    values,\n    topContent,\n    bottomContent,\n    removeWrapper,\n    topContentPlacement,\n    bottomContentPlacement,\n    getBaseProps,\n    getWrapperProps,\n    getTableProps\n  };\n}\n\nexport {\n  useTable\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key | null;\n  currentKey: Key | null;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key | null, currentKey?: Key | null) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey ?? keys.anchorKey;\n      this.currentKey = currentKey ?? keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey ?? null;\n      this.currentKey = currentKey ?? null;\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DisabledBehavior, FocusStrategy, Key, MultipleSelection, SelectionBehavior, SelectionMode} from '@react-types/shared';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nfunction equalSets(setA, setB) {\n  if (setA.size !== setB.size) {\n    return false;\n  }\n\n  for (let item of setA) {\n    if (!setB.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport interface MultipleSelectionStateProps extends MultipleSelection {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** Whether onSelectionChange should fire even if the new set of keys is the same as the last. */\n  allowDuplicateSelectionEvents?: boolean,\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelectionStateProps): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection = false,\n    allowDuplicateSelectionEvents,\n    selectionBehavior: selectionBehaviorProp = 'toggle',\n    disabledBehavior = 'all'\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef<Key | null>(null);\n  let childFocusStrategyRef = useRef<FocusStrategy | null>(null);\n  let [, setFocusedKey] = useState<Key | null>(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys!,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n  let [selectionBehavior, setSelectionBehavior] = useState(selectionBehaviorProp);\n\n  // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n  // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n  if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) {\n    setSelectionBehavior('replace');\n  }\n\n  // If the selectionBehavior prop changes, update the state as well.\n  let lastSelectionBehavior = useRef(selectionBehaviorProp);\n  useEffect(() => {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    selectionBehavior,\n    setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !equalSets(keys, selectedKeys)) {\n        setSelectedKeys(keys);\n      }\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key> | null | undefined, defaultValue?: Selection): 'all' | Set<Key> | undefined {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection, DisabledBehavior,\n  FocusStrategy,\n  Selection as ISelection,\n  Key,\n  LayoutDelegate,\n  LongPressEvent,\n  Node,\n  PressEvent,\n  SelectionBehavior,\n  SelectionMode\n} from '@react-types/shared';\nimport {compareNodeOrder, getChildNodes, getFirstItem} from '@react-stately/collections';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean,\n  layoutDelegate?: LayoutDelegate\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean | null;\n  private layoutDelegate: LayoutDelegate | null;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n    this.layoutDelegate = options?.layoutDelegate || null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * The selection behavior for the collection.\n   */\n  get selectionBehavior(): SelectionBehavior {\n    return this.state.selectionBehavior;\n  }\n\n  /**\n   * Sets the selection behavior for the collection.\n   */\n  setSelectionBehavior(selectionBehavior: SelectionBehavior) {\n    this.state.setSelectionBehavior(selectionBehavior);\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean) {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key | null {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy | null {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key | null, childFocusStrategy?: FocusStrategy) {\n    if (key == null || this.collection.getItem(key)) {\n      this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key) {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return false;\n    }\n    return this.state.selectedKeys === 'all'\n      ? this.canSelectItem(mappedKey)\n      : this.state.selectedKeys.has(mappedKey);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || (item && compareNodeOrder(this.collection, item, first) < 0)) {\n        first = item;\n      }\n    }\n\n    return first?.key ?? null;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || (item && compareNodeOrder(this.collection, item, last) > 0)) {\n        last = item;\n      }\n    }\n\n    return last?.key ?? null;\n  }\n\n  get disabledKeys(): Set<Key> {\n    return this.state.disabledKeys;\n  }\n\n  get disabledBehavior(): DisabledBehavior {\n    return this.state.disabledBehavior;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      this.replaceSelection(toKey);\n      return;\n    }\n\n    let mappedToKey = this.getKey(toKey);\n    if (mappedToKey == null) {\n      return;\n    }\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([mappedToKey], mappedToKey, mappedToKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey ?? mappedToKey;\n      selection = new Selection(selectedKeys, anchorKey, mappedToKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey ?? mappedToKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(mappedToKey, anchorKey)) {\n        if (this.canSelectItem(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (compareNodeOrder(this.collection, fromItem, toItem) <= 0) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    if (this.layoutDelegate?.getKeyRange) {\n      return this.layoutDelegate.getKeyRange(from, to);\n    }\n\n    let keys: Key[] = [];\n    let key: Key | null = from;\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item && (item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection))) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item && item.type !== 'item' && item.parentKey != null) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single' && !this.isSelected(key)) {\n      this.replaceSelection(key);\n      return;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(mappedKey)) {\n      keys.delete(mappedKey);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else if (this.canSelectItem(mappedKey)) {\n      keys.add(mappedKey);\n      keys.anchorKey = mappedKey;\n      keys.currentKey = mappedKey;\n    }\n\n    if (this.disallowEmptySelection && keys.size === 0) {\n      return;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let mappedKey = this.getKey(key);\n    if (mappedKey == null) {\n      return;\n    }\n\n    let selection = this.canSelectItem(mappedKey)\n      ? new Selection([mappedKey], mappedKey, mappedKey)\n      : new Selection();\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      let mappedKey = this.getKey(key);\n      if (mappedKey != null) {\n        selection.add(mappedKey);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key | null) => {\n      while (key != null) {\n        if (this.canSelectItem(key)) {\n          let item = this.collection.getItem(key);\n          if (item?.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item?.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys(getFirstItem(getChildNodes(item, this.collection))?.key ?? null);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll() {\n    if (!this.isSelectAll && this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection() {\n    if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll() {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | LongPressEvent | PointerEvent) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (this.selectionBehavior === 'toggle' || (e && (e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n      // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n      this.toggleSelection(key);\n    } else {\n      this.replaceSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>) {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canSelectItem(key: Key) {\n    if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) {\n      return false;\n    }\n\n    let item = this.collection.getItem(key);\n    if (!item || item?.props?.isDisabled || (item.type === 'cell' && !this.allowsCellSelection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isDisabled(key: Key) {\n    return this.state.disabledBehavior === 'all' && (this.state.disabledKeys.has(key) || !!this.collection.getItem(key)?.props?.isDisabled);\n  }\n\n  isLink(key: Key) {\n    return !!this.collection.getItem(key)?.props?.href;\n  }\n\n  getItemProps(key: Key) {\n    return this.collection.getItem(key)?.props;\n  }\n}\n", "import {getChildNodes, getFirstItem, getLastItem} from '@react-stately/collections';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\nimport {MultipleSelectionState, MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useEffect, useMemo, useRef} from 'react';\n\nexport interface GridState<T, C extends GridCollection<T>> {\n  collection: C,\n  /** A set of keys for rows that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update row selection state. */\n  selectionManager: SelectionManager,\n  /** Whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  isKeyboardNavigationDisabled: boolean\n}\n\nexport interface GridStateOptions<T, C extends GridCollection<T>> extends MultipleSelectionStateProps {\n  collection: C,\n  disabledKeys?: Iterable<Key>,\n  focusMode?: 'row' | 'cell',\n  /** @private - do not use unless you know what you're doing. */\n  UNSAFE_selectionState?: MultipleSelectionState\n}\n\n/**\n * Provides state management for a grid component. Handles row selection and focusing a grid cell's focusable child if applicable.\n */\nexport function useGridState<T extends object, C extends GridCollection<T>>(props: GridStateOptions<T, C>): GridState<T, C> {\n  let {collection, focusMode} = props;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let selectionState = props.UNSAFE_selectionState || useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n      props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n    , [props.disabledKeys]);\n\n  let setFocusedKey = selectionState.setFocusedKey;\n  selectionState.setFocusedKey = (key, child) => {\n    // If focusMode is cell and an item is focused, focus a child cell instead.\n    if (focusMode === 'cell' && key != null) {\n      let item = collection.getItem(key);\n      if (item?.type === 'item') {\n        let children = getChildNodes(item, collection);\n        if (child === 'last') {\n          key = getLastItem(children)?.key ?? null;\n        } else {\n          key = getFirstItem(children)?.key ?? null;\n        }\n      }\n    }\n\n    setFocusedKey(key, child);\n  };\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState)\n    , [collection, selectionState]\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef<C | null>(null);\n  useEffect(() => {\n    if (selectionState.focusedKey != null && cachedCollection.current && !collection.getItem(selectionState.focusedKey)) {\n      const node = cachedCollection.current.getItem(selectionState.focusedKey);\n      const parentNode =\n        node?.parentKey != null && (node.type === 'cell' || node.type === 'rowheader' || node.type === 'column') ?\n        cachedCollection.current.getItem(node.parentKey) :\n        node;\n      if (!parentNode) {\n        selectionState.setFocusedKey(null);\n        return;\n      }\n      const cachedRows = cachedCollection.current.rows;\n      const rows = collection.rows;\n      const diff = cachedRows.length - rows.length;\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max(parentNode.index - diff + 1, 0) :\n          parentNode.index\n        ),\n        rows.length - 1);\n      let newRow: GridNode<T> | null = null;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== 'headerrow') {\n          newRow = rows[index];\n          break;\n        }\n        // Find next, not disabled row.\n        if (index < rows.length - 1) {\n          index++;\n        // Otherwise, find previous, not disabled row.\n        } else {\n          if (index > parentNode.index) {\n            index = parentNode.index;\n          }\n          index--;\n        }\n      }\n      if (newRow) {\n        const childNodes = newRow.hasChildNodes ? [...getChildNodes(newRow, collection)] : [];\n        const keyToFocus =\n          newRow.hasChildNodes &&\n          parentNode !== node &&\n          node &&\n          node.index < childNodes.length ?\n          childNodes[node.index].key :\n          newRow.key;\n        selectionState.setFocusedKey(keyToFocus);\n      } else {\n        selectionState.setFocusedKey(null);\n      }\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    isKeyboardNavigationDisabled: false,\n    selectionManager\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridNode, GridRow, GridCollection as IGridCollection} from '@react-types/grid';\nimport {Key} from '@react-types/shared';\n\ninterface GridCollectionOptions<T> {\n  columnCount: number,\n  items: GridRow<T>[],\n  visitNode?: (cell: GridNode<T>) => GridNode<T>\n}\n\nexport class GridCollection<T> implements IGridCollection<T> {\n  keyMap: Map<Key, GridNode<T>> = new Map();\n  columnCount: number;\n  rows: GridNode<T>[];\n\n  constructor(opts: GridCollectionOptions<T>) {\n    this.keyMap = new Map();\n    this.columnCount = opts?.columnCount;\n    this.rows = [];\n\n    let visit = (node: GridNode<T>) => {\n      // If the node is the same object as the previous node for the same key,\n      // we can skip this node and its children. We always visit columns though,\n      // because we depend on order to build the columns array.\n      let prevNode = this.keyMap.get(node.key);\n      if (opts.visitNode) {\n        node = opts.visitNode(node);\n      }\n\n      this.keyMap.set(node.key, node);\n\n      let childKeys = new Set();\n      let last: GridNode<T> | null = null;\n      for (let child of node.childNodes) {\n        if (child.type === 'cell' && child.parentKey == null) {\n          // if child is a cell parent key isn't already established by the collection, match child node to parent row\n          child.parentKey = node.key;\n        }\n        childKeys.add(child.key);\n\n        if (last) {\n          last.nextKey = child.key;\n          child.prevKey = last.key;\n        } else {\n          child.prevKey = null;\n        }\n\n        visit(child);\n        last = child;\n      }\n\n      if (last) {\n        last.nextKey = null;\n      }\n\n      // Remove deleted nodes and their children from the key map\n      if (prevNode) {\n        for (let child of prevNode.childNodes) {\n          if (!childKeys.has(child.key)) {\n            remove(child);\n          }\n        }\n      }\n    };\n\n    let remove = (node: GridNode<T>) => {\n      this.keyMap.delete(node.key);\n      for (let child of node.childNodes) {\n        if (this.keyMap.get(child.key) === child) {\n          remove(child);\n        }\n      }\n    };\n\n    let last: GridNode<T> | null = null;\n    for (let [i, node] of opts.items.entries()) {\n      let rowNode: GridNode<T> = {\n        ...node,\n        level: node.level ?? 0,\n        key: node.key ?? 'row-' + i,\n        type: node.type ?? 'row',\n        value: node.value ?? null,\n        hasChildNodes: true,\n        childNodes: [...node.childNodes],\n        rendered: node.rendered,\n        textValue: node.textValue ?? '',\n        index: node.index ?? i\n      };\n\n      if (last) {\n        last.nextKey = rowNode.key;\n        rowNode.prevKey = last.key;\n      } else {\n        rowNode.prevKey = null;\n      }\n\n      this.rows.push(rowNode);\n      visit(rowNode);\n\n      last = rowNode;\n    }\n\n    if (last) {\n      last.nextKey = null;\n    }\n  }\n\n  *[Symbol.iterator]() {\n    yield* [...this.rows];\n  }\n\n  get size() {\n    return [...this.rows].length;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey ?? null : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey ?? null : null;\n  }\n\n  getFirstKey(): Key | null {\n    return [...this.rows][0]?.key;\n  }\n\n  getLastKey(): Key | null {\n    let rows = [...this.rows];\n    return rows[rows.length - 1]?.key;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getChildren(key: Key): Iterable<GridNode<T>> {\n    let node = this.keyMap.get(key);\n    return node?.childNodes || [];\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getFirstItem, getLastItem} from '@react-stately/collections';\nimport {GridCollection} from '@react-stately/grid';\nimport {GridNode} from '@react-types/grid';\nimport {TableCollection as ITableCollection} from '@react-types/table';\nimport {Key} from '@react-types/shared';\n\ninterface GridCollectionOptions {\n  showSelectionCheckboxes?: boolean,\n  showDragButtons?: boolean\n}\n\nconst ROW_HEADER_COLUMN_KEY = 'row-header-column-' + Math.random().toString(36).slice(2);\nlet ROW_HEADER_COLUMN_KEY_DRAG = 'row-header-column-' + Math.random().toString(36).slice(2);\nwhile (ROW_HEADER_COLUMN_KEY === ROW_HEADER_COLUMN_KEY_DRAG) {\n  ROW_HEADER_COLUMN_KEY_DRAG = 'row-header-column-' + Math.random().toString(36).slice(2);\n}\n\n/** @private */\nexport function buildHeaderRows<T>(keyMap: Map<Key, GridNode<T>>, columnNodes: GridNode<T>[]): GridNode<T>[] {\n  if (columnNodes.length === 0) {\n    return [];\n  }\n\n  let columns: GridNode<T>[][] = [];\n  let seen = new Map();\n  for (let column of columnNodes) {\n    let parentKey = column.parentKey;\n    let col = [column];\n\n    while (parentKey) {\n      let parent: GridNode<T> | undefined = keyMap.get(parentKey);\n      if (!parent) {\n        break;\n      }\n\n      // If we've already seen this parent, than it is shared\n      // with a previous column. If the current column is taller\n      // than the previous column, than we need to shift the parent\n      // in the previous column so it's level with the current column.\n      if (seen.has(parent)) {\n        parent.colspan ??= 0;\n        parent.colspan++;\n\n        let {column, index} = seen.get(parent);\n        if (index > col.length) {\n          break;\n        }\n\n        for (let i = index; i < col.length; i++) {\n          column.splice(i, 0, null);\n        }\n\n        // Adjust shifted indices\n        for (let i = col.length; i < column.length; i++) {\n          // eslint-disable-next-line max-depth\n          if (column[i] && seen.has(column[i])) {\n            seen.get(column[i]).index = i;\n          }\n        }\n      } else {\n        parent.colspan = 1;\n        col.push(parent);\n        seen.set(parent, {column: col, index: col.length - 1});\n      }\n\n      parentKey = parent.parentKey;\n    }\n\n    columns.push(col);\n    column.index = columns.length - 1;\n  }\n\n  let maxLength = Math.max(...columns.map(c => c.length));\n  let headerRows: GridNode<T>[][] = Array(maxLength).fill(0).map(() => []);\n\n  // Convert columns into rows.\n  let colIndex = 0;\n  for (let column of columns) {\n    let i = maxLength - 1;\n    for (let item of column) {\n      if (item) {\n        // Fill the space up until the current column with a placeholder\n        let row = headerRows[i];\n        let rowLength = row.reduce((p, c) => p + (c.colspan ?? 1), 0);\n        if (rowLength < colIndex) {\n          let placeholder: GridNode<T> = {\n            type: 'placeholder',\n            key: 'placeholder-' + item.key,\n            colspan: colIndex - rowLength,\n            index: rowLength,\n            value: null,\n            rendered: null,\n            level: i,\n            hasChildNodes: false,\n            childNodes: [],\n            textValue: ''\n          };\n\n          // eslint-disable-next-line max-depth\n          if (row.length > 0) {\n            row[row.length - 1].nextKey = placeholder.key;\n            placeholder.prevKey = row[row.length - 1].key;\n          }\n\n          row.push(placeholder);\n        }\n\n        if (row.length > 0) {\n          row[row.length - 1].nextKey = item.key;\n          item.prevKey = row[row.length - 1].key;\n        }\n\n        item.level = i;\n        item.colIndex = colIndex;\n        row.push(item);\n      }\n\n      i--;\n    }\n\n    colIndex++;\n  }\n\n  // Add placeholders at the end of each row that is shorter than the maximum\n  let i = 0;\n  for (let row of headerRows) {\n    let rowLength = row.reduce((p, c) => p + (c.colspan ?? 1), 0);\n    if (rowLength < columnNodes.length) {\n      let placeholder: GridNode<T> = {\n        type: 'placeholder',\n        key: 'placeholder-' + row[row.length - 1].key,\n        colspan: columnNodes.length - rowLength,\n        index: rowLength,\n        value: null,\n        rendered: null,\n        level: i,\n        hasChildNodes: false,\n        childNodes: [],\n        textValue: '',\n        prevKey: row[row.length - 1].key\n      };\n\n      row.push(placeholder);\n    }\n\n    i++;\n  }\n\n  return headerRows.map((childNodes, index) => {\n    let row: GridNode<T> = {\n      type: 'headerrow',\n      key: 'headerrow-' + index,\n      index,\n      value: null,\n      rendered: null,\n      level: 0,\n      hasChildNodes: true,\n      childNodes,\n      textValue: ''\n    };\n\n    return row;\n  });\n}\n\nexport class TableCollection<T> extends GridCollection<T> implements ITableCollection<T> {\n  headerRows: GridNode<T>[];\n  columns: GridNode<T>[];\n  rowHeaderColumnKeys: Set<Key>;\n  body: GridNode<T>;\n  _size: number = 0;\n\n  constructor(nodes: Iterable<GridNode<T>>, prev?: ITableCollection<T> | null, opts?: GridCollectionOptions) {\n    let rowHeaderColumnKeys: Set<Key> = new Set();\n    let body: GridNode<T> | null = null;\n    let columns: GridNode<T>[] = [];\n    // Add cell for selection checkboxes if needed.\n    if (opts?.showSelectionCheckboxes) {\n      let rowHeaderColumn: GridNode<T> = {\n        type: 'column',\n        key: ROW_HEADER_COLUMN_KEY,\n        value: null,\n        textValue: '',\n        level: 0,\n        index: opts?.showDragButtons ? 1 : 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isSelectionCell: true\n        }\n      };\n\n      columns.unshift(rowHeaderColumn);\n    }\n\n    // Add cell for drag buttons if needed.\n    if (opts?.showDragButtons) {\n      let rowHeaderColumn: GridNode<T> = {\n        type: 'column',\n        key: ROW_HEADER_COLUMN_KEY_DRAG,\n        value: null,\n        textValue: '',\n        level: 0,\n        index: 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isDragButtonCell: true\n        }\n      };\n\n      columns.unshift(rowHeaderColumn);\n    }\n\n    let rows: GridNode<T>[] = [];\n    let columnKeyMap = new Map();\n    let visit = (node: GridNode<T>) => {\n      switch (node.type) {\n        case 'body':\n          body = node;\n          break;\n        case 'column':\n          columnKeyMap.set(node.key, node);\n          if (!node.hasChildNodes) {\n            columns.push(node);\n\n            if (node.props.isRowHeader) {\n              rowHeaderColumnKeys.add(node.key);\n            }\n          }\n          break;\n        case 'item':\n          rows.push(node);\n          return; // do not go into childNodes\n      }\n      for (let child of node.childNodes) {\n        visit(child);\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let headerRows = buildHeaderRows(columnKeyMap, columns) as GridNode<T>[];\n    headerRows.forEach((row, i) => rows.splice(i, 0, row));\n\n    super({\n      columnCount: columns.length,\n      items: rows,\n      visitNode: node => {\n        node.column = columns[node.index];\n        return node;\n      }\n    });\n    this.columns = columns;\n    this.rowHeaderColumnKeys = rowHeaderColumnKeys;\n    this.body = body!;\n    this.headerRows = headerRows;\n    this._size = [...body!.childNodes].length;\n\n    // Default row header column to the first one.\n    if (this.rowHeaderColumnKeys.size === 0) {\n      let col = this.columns.find(column => !column.props?.isDragButtonCell && !column.props?.isSelectionCell);\n      if (col) {\n        this.rowHeaderColumnKeys.add(col.key);\n      }\n    }\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.body.childNodes;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.prevKey ?? null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node?.nextKey ?? null;\n  }\n\n  getFirstKey() {\n    return getFirstItem(this.body.childNodes)?.key ?? null;\n  }\n\n  getLastKey() {\n    return getLastItem(this.body.childNodes)?.key ?? null;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key) ?? null;\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n\n  getChildren(key: Key): Iterable<GridNode<T>> {\n    if (key === this.body.key) {\n      return this.body.childNodes;\n    }\n\n    return super.getChildren(key);\n  }\n\n  getTextValue(key: Key): string {\n    let row = this.getItem(key);\n    if (!row) {\n      return '';\n    }\n\n    // If the row has a textValue, use that.\n    if (row.textValue) {\n      return row.textValue;\n    }\n\n    // Otherwise combine the text of each of the row header columns.\n    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;\n    if (rowHeaderColumnKeys) {\n      let text: string[] = [];\n      for (let cell of row.childNodes) {\n        let column = this.columns[cell.index];\n        if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          text.push(cell.textValue);\n        }\n\n        if (text.length === rowHeaderColumnKeys.size) {\n          break;\n        }\n      }\n\n      return text.join(' ');\n    }\n\n    return '';\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridState, useGridState} from '@react-stately/grid';\nimport {TableCollection as ITableCollection, TableBodyProps, TableHeaderProps} from '@react-types/table';\nimport {Key, Node, SelectionMode, Sortable, SortDescriptor, SortDirection} from '@react-types/shared';\nimport {MultipleSelectionState, MultipleSelectionStateProps} from '@react-stately/selection';\nimport {ReactElement, useCallback, useMemo, useState} from 'react';\nimport {TableCollection} from './TableCollection';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface TableState<T> extends GridState<T, ITableCollection<T>> {\n  /** A collection of rows and columns in the table. */\n  collection: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes: boolean,\n  /** The current sorted column and direction. */\n  sortDescriptor: SortDescriptor | null,\n  /** Calls the provided onSortChange handler with the provided column key and sort direction. */\n  sort(columnKey: Key, direction?: 'ascending' | 'descending'): void,\n  /** Whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  isKeyboardNavigationDisabled: boolean,\n  /** Set whether keyboard navigation is disabled, such as when the arrow keys should be handled by a component within a cell. */\n  setKeyboardNavigationDisabled: (val: boolean) => void\n}\n\nexport interface CollectionBuilderContext<T> {\n  showSelectionCheckboxes: boolean,\n  showDragButtons: boolean,\n  selectionMode: SelectionMode,\n  columns: Node<T>[]\n}\n\nexport interface TableStateProps<T> extends MultipleSelectionStateProps, Sortable {\n  /** The elements that make up the table. Includes the TableHeader, TableBody, Columns, and Rows. */\n  children?: [ReactElement<TableHeaderProps<T>>, ReactElement<TableBodyProps<T>>],\n  /** A list of row keys to disable. */\n  disabledKeys?: Iterable<Key>,\n  /** A pre-constructed collection to use instead of building one from items and children. */\n  collection?: ITableCollection<T>,\n  /** Whether the row selection checkboxes should be displayed. */\n  showSelectionCheckboxes?: boolean,\n  /** Whether the row drag button should be displayed.\n   * @private\n   */\n  showDragButtons?: boolean,\n  /** @private - do not use unless you know what you're doing. */\n  UNSAFE_selectionState?: MultipleSelectionState\n}\n\nconst OPPOSITE_SORT_DIRECTION = {\n  ascending: 'descending' as SortDirection,\n  descending: 'ascending' as SortDirection\n};\n\n/**\n * Provides state management for a table component. Handles building a collection\n * of columns and rows from props. In addition, it tracks row selection and manages sort order changes.\n */\nexport function useTableState<T extends object>(props: TableStateProps<T>): TableState<T> {\n  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = useState(false);\n  let {selectionMode = 'none', showSelectionCheckboxes, showDragButtons} = props;\n\n  let context = useMemo(() => ({\n    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== 'none',\n    showDragButtons: showDragButtons,\n    selectionMode,\n    columns: []\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }), [props.children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n\n  let collection = useCollection<T, ITableCollection<T>>(\n    props,\n    useCallback((nodes) => new TableCollection(nodes, null, context), [context]),\n    context\n  );\n  let {disabledKeys, selectionManager} = useGridState({\n    ...props,\n    collection,\n    disabledBehavior: props.disabledBehavior || 'selection'\n  });\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor ?? null,\n    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,\n    setKeyboardNavigationDisabled,\n    sort(columnKey: Key, direction?: 'ascending' | 'descending') {\n      props.onSortChange?.({\n        column: columnKey,\n        direction: direction ?? (props.sortDescriptor?.column === columnKey\n          ? OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction]\n          : 'ascending')\n      });\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {TableHeaderProps} from '@react-types/table';\n\nfunction TableHeader<T>(props: TableHeaderProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableHeader.getCollectionNode = function* getCollectionNode<T>(props: TableHeaderProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, any> {\n  let {children, columns} = props;\n\n  // Clear columns so they aren't double added in strict mode.\n  context.columns = [];\n\n  if (typeof children === 'function') {\n    if (!columns) {\n      throw new Error('props.children was a function but props.columns is missing');\n    }\n\n    for (let column of columns) {\n      yield {\n        type: 'column',\n        value: column,\n        renderer: children\n      };\n    }\n  } else {\n    let columns: PartialNode<T>[] = [];\n    React.Children.forEach(children, column => {\n      columns.push({\n        type: 'column',\n        element: column\n      });\n    });\n\n    yield* columns;\n  }\n};\n\n/**\n * A TableHeader is a container for the Column elements in a Table. Columns can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `columns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableHeader = TableHeader as <T>(props: TableHeaderProps<T>) => JSX.Element;\nexport {_TableHeader as TableHeader};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {TableBodyProps} from '@react-types/table';\n\nfunction TableBody<T>(props: TableBodyProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nTableBody.getCollectionNode = function* getCollectionNode<T>(props: TableBodyProps<T>): Generator<PartialNode<T>> {\n  let {children, items} = props;\n  yield {\n    type: 'body',\n    hasChildNodes: true,\n    props,\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, item => {\n          items.push({\n            type: 'item',\n            element: item\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n/**\n * A TableBody is a container for the Row elements of a Table. Rows can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `items` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _TableBody = TableBody as <T>(props: TableBodyProps<T>) => JSX.Element;\nexport {_TableBody as TableBody};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {ColumnProps} from '@react-types/table';\nimport {GridNode} from '@react-types/grid';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Column<T>(props: ColumnProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nColumn.getCollectionNode = function* getCollectionNode<T>(props: ColumnProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>, void, GridNode<T>[]> {\n  let {title, children, childColumns} = props;\n\n  let rendered = title || children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'];\n\n  let fullNodes = yield {\n    type: 'column',\n    hasChildNodes: !!childColumns || (!!title && React.Children.count(children) > 0),\n    rendered,\n    textValue,\n    props,\n    *childNodes() {\n      if (childColumns) {\n        for (let child of childColumns) {\n          yield {\n            type: 'column',\n            value: child\n          };\n        }\n      } else if (title) {\n        let childColumns: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          childColumns.push({\n            type: 'column',\n            element: child as ReactElement<ColumnProps<T>>\n          });\n        });\n\n        yield* childColumns;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // This is a bit of a hack, but it works.\n      // If this method is called, then there's a cached version of this node available.\n      // But, we need to keep the list of columns in the new context up to date.\n      updateContext(newContext);\n      return false;\n    }\n  };\n\n  let updateContext = (context: CollectionBuilderContext<T>) => {\n    // register leaf columns on the context so that <Row> can access them\n    for (let node of fullNodes) {\n      if (!node.hasChildNodes) {\n        context.columns.push(node);\n      }\n    }\n  };\n\n  updateContext(context);\n};\n\n/**\n * A Column represents a field of each item within a Table. Columns may also contain nested\n * Column elements to represent column groups. Nested columns can be statically defined as\n * children, or dynamically generated using a function based on the `childColumns` prop.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Column = Column as <T>(props: ColumnProps<T>) => JSX.Element;\nexport {_Column as Column};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBuilderContext} from './useTableState';\nimport {PartialNode} from '@react-stately/collections';\nimport React, {JSX, ReactElement} from 'react';\nimport {RowProps} from '@react-types/table';\n\nfunction Row<T>(props: RowProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nRow.getCollectionNode = function* getCollectionNode<T>(props: RowProps<T>, context: CollectionBuilderContext<T>): Generator<PartialNode<T>> {\n  let {children, textValue, UNSTABLE_childItems} = props;\n\n  yield {\n    type: 'item',\n    props: props,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: true,\n    *childNodes() {\n      // Process cells first\n      if (context.showDragButtons) {\n        yield {\n          type: 'cell',\n          key: 'header-drag', // this is combined with the row key by CollectionBuilder\n          props: {\n            isDragButtonCell: true\n          }\n        };\n      }\n\n      if (context.showSelectionCheckboxes && context.selectionMode !== 'none') {\n        yield {\n          type: 'cell',\n          key: 'header', // this is combined with the row key by CollectionBuilder\n          props: {\n            isSelectionCell: true\n          }\n        };\n      }\n\n      if (typeof children === 'function') {\n        for (let column of context.columns) {\n          yield {\n            type: 'cell',\n            element: children(column.key),\n            key: column.key // this is combined with the row key by CollectionBuilder\n          };\n        }\n\n        if (UNSTABLE_childItems) {\n          for (let child of UNSTABLE_childItems) {\n            // Note: in order to reuse the render function of TableBody for our child rows, we just need to yield a type and a value here. CollectionBuilder will then look up\n            // the parent renderer and use that to build the full node of this child row, using the value provided here to generate the cells\n            yield {\n              type: 'item',\n              value: child\n            };\n          }\n        }\n      } else {\n        let cells: PartialNode<T>[] = [];\n        let childRows: PartialNode<T>[] = [];\n        React.Children.forEach(children, node => {\n          if (node.type === Row) {\n            if (cells.length < context.columns.length) {\n              throw new Error('All of a Row\\'s child Cells must be positioned before any child Rows.');\n            }\n\n            childRows.push({\n              type: 'item',\n              element: node\n            });\n          } else {\n            cells.push({\n              type: 'cell',\n              element: node\n            });\n          }\n        });\n\n        if (cells.length !== context.columns.length) {\n          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);\n        }\n\n        yield* cells;\n        yield* childRows;\n      }\n    },\n    shouldInvalidate(newContext: CollectionBuilderContext<T>) {\n      // Invalidate all rows if the columns changed.\n      return newContext.columns.length !== context.columns.length ||\n        newContext.columns.some((c, i) => c.key !== context.columns[i].key) ||\n        newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes ||\n        newContext.showDragButtons !== context.showDragButtons ||\n        newContext.selectionMode !== context.selectionMode;\n    }\n  };\n};\n\n/**\n * A Row represents a single item in a Table and contains Cell elements for each column.\n * Cells can be statically defined as children, or generated dynamically using a function\n * based on the columns defined in the TableHeader.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Row = Row as <T>(props: RowProps<T>) => JSX.Element;\nexport {_Row as Row};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CellProps} from '@react-types/table';\nimport {JSX, ReactElement} from 'react';\nimport {PartialNode} from '@react-stately/collections';\n\nfunction Cell(props: CellProps): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nCell.getCollectionNode = function* getCollectionNode<T>(props: CellProps): Generator<PartialNode<T>> {\n  let {children} = props;\n\n  let textValue = props.textValue || (typeof children === 'string' ? children : '') || props['aria-label'] || '';\n  yield {\n    type: 'cell',\n    props: props,\n    rendered: children,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: false\n  };\n};\n\n/**\n * A Cell represents the value of a single Column within a Table Row.\n */\n// We don't want getCollectionNode to show up in the type definition\nlet _Cell = Cell as (props: CellProps) => JSX.Element;\nexport {_Cell as Cell};\n", "\"use client\";\n\n// src/table-cell.tsx\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableCell } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableCell = forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const { as, className, node, rowKey, slots, state, classNames, ...otherProps } = props;\n  const Component = as || \"td\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { gridCellProps } = useTableCell({ node }, state, domRef);\n  const tdStyles = clsx(classNames == null ? void 0 : classNames.td, className, (_a = node.props) == null ? void 0 : _a.className);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const isRowSelected = state.selectionManager.isSelected(rowKey);\n  const cell = useMemo(() => {\n    const cellType = typeof node.rendered;\n    return cellType !== \"object\" && cellType !== \"function\" ? /* @__PURE__ */ jsx(\"span\", { children: node.rendered }) : node.rendered;\n  }, [node.rendered]);\n  const columnProps = ((_b = node.column) == null ? void 0 : _b.props) || {};\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-selected\": dataAttr(isRowSelected),\n      ...mergeProps(\n        gridCellProps,\n        focusProps,\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        otherProps\n      ),\n      className: (_c = slots.td) == null ? void 0 : _c.call(slots, { align: columnProps.align, class: tdStyles }),\n      children: cell\n    }\n  );\n});\nTableCell.displayName = \"NextUI.TableCell\";\nvar table_cell_default = TableCell;\n\nexport {\n  table_cell_default\n};\n", "\"use client\";\n\n// src/table-checkbox-cell.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableCell, useTableSelectionCheckbox } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { Checkbox } from \"@nextui-org/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableCheckboxCell = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    as,\n    className,\n    node,\n    rowKey,\n    slots,\n    state,\n    color,\n    disableAnimation,\n    checkboxesProps,\n    selectionMode,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"td\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { gridCellProps } = useTableCell({ node }, state, domRef);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const { checkboxProps } = useTableSelectionCheckbox({ key: (node == null ? void 0 : node.parentKey) || node.key }, state);\n  const tdStyles = clsx(classNames == null ? void 0 : classNames.td, className, (_a = node.props) == null ? void 0 : _a.className);\n  const isSingleSelectionMode = selectionMode === \"single\";\n  const { onChange, ...otherCheckboxProps } = checkboxProps;\n  const isRowSelected = state.selectionManager.isSelected(rowKey);\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-selected\": dataAttr(isRowSelected),\n      ...mergeProps(\n        gridCellProps,\n        focusProps,\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        otherProps\n      ),\n      className: (_b = slots.td) == null ? void 0 : _b.call(slots, { class: tdStyles }),\n      children: isSingleSelectionMode ? /* @__PURE__ */ jsx(VisuallyHidden, { children: checkboxProps[\"aria-label\"] }) : /* @__PURE__ */ jsx(\n        Checkbox,\n        {\n          color,\n          disableAnimation,\n          onValueChange: onChange,\n          ...mergeProps(checkboxesProps, otherCheckboxProps)\n        }\n      )\n    }\n  );\n});\nTableCheckboxCell.displayName = \"NextUI.TableCheckboxCell\";\nvar table_checkbox_cell_default = TableCheckboxCell;\n\nexport {\n  table_checkbox_cell_default\n};\n", "\"use client\";\n\n// src/table-row.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableRow } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableRow = forwardRef((props, ref) => {\n  var _a, _b;\n  const { as, className, children, node, slots, state, isSelectable, classNames, ...otherProps } = props;\n  const Component = as || ((props == null ? void 0 : props.href) ? \"a\" : \"tr\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { rowProps } = useTableRow({ node }, state, domRef);\n  const trStyles = clsx(classNames == null ? void 0 : classNames.tr, className, (_a = node.props) == null ? void 0 : _a.className);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isSelected = state.selectionManager.isSelected(node.key);\n  const { isHovered, hoverProps } = useHover({ isDisabled });\n  const { isFirst, isLast, isMiddle, isOdd } = useMemo(() => {\n    const isFirst2 = node.key === state.collection.getFirstKey();\n    const isLast2 = node.key === state.collection.getLastKey();\n    const isMiddle2 = !isFirst2 && !isLast2;\n    const isOdd2 = (node == null ? void 0 : node.index) ? (node.index + 1) % 2 === 0 : false;\n    return {\n      isFirst: isFirst2,\n      isLast: isLast2,\n      isMiddle: isMiddle2,\n      isOdd: isOdd2\n    };\n  }, [node, state.collection]);\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-first\": dataAttr(isFirst),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-last\": dataAttr(isLast),\n      \"data-middle\": dataAttr(isMiddle),\n      \"data-odd\": dataAttr(isOdd),\n      \"data-selected\": dataAttr(isSelected),\n      ...mergeProps(\n        rowProps,\n        focusProps,\n        isSelectable ? hoverProps : {},\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        otherProps\n      ),\n      className: (_b = slots.tr) == null ? void 0 : _b.call(slots, { class: trStyles }),\n      children\n    }\n  );\n});\nTableRow.displayName = \"NextUI.TableRow\";\nvar table_row_default = TableRow;\n\nexport {\n  table_row_default\n};\n", "\"use client\";\nimport {\n  table_cell_default\n} from \"./chunk-RG5TTATB.mjs\";\nimport {\n  table_checkbox_cell_default\n} from \"./chunk-ZVKU2CIZ.mjs\";\nimport {\n  table_row_default\n} from \"./chunk-L22PK57S.mjs\";\n\n// src/table-body.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableRowGroup } from \"@react-aria/table\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar TableBody = forwardRef((props, ref) => {\n  var _a;\n  const {\n    as,\n    className,\n    slots,\n    state,\n    collection,\n    isSelectable,\n    color,\n    disableAnimation,\n    checkboxesProps,\n    selectionMode,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"tbody\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { rowGroupProps } = useTableRowGroup();\n  const tbodyStyles = clsx(classNames == null ? void 0 : classNames.tbody, className);\n  const bodyProps = collection == null ? void 0 : collection.body.props;\n  const isLoading = (bodyProps == null ? void 0 : bodyProps.isLoading) || (bodyProps == null ? void 0 : bodyProps.loadingState) === \"loading\" || (bodyProps == null ? void 0 : bodyProps.loadingState) === \"loadingMore\";\n  const renderRows = useMemo(() => {\n    return [...collection.body.childNodes].map((row) => /* @__PURE__ */ jsx(\n      table_row_default,\n      {\n        classNames,\n        isSelectable,\n        node: row,\n        slots,\n        state,\n        children: [...row.childNodes].map(\n          (cell) => cell.props.isSelectionCell ? /* @__PURE__ */ jsx(\n            table_checkbox_cell_default,\n            {\n              checkboxesProps,\n              classNames,\n              color,\n              disableAnimation,\n              node: cell,\n              rowKey: row.key,\n              selectionMode,\n              slots,\n              state\n            },\n            cell.key\n          ) : /* @__PURE__ */ jsx(\n            table_cell_default,\n            {\n              classNames,\n              node: cell,\n              rowKey: row.key,\n              slots,\n              state\n            },\n            cell.key\n          )\n        )\n      },\n      row.key\n    ));\n  }, [collection.body.childNodes, classNames, isSelectable, slots, state]);\n  let emptyContent;\n  let loadingContent;\n  if (collection.size === 0 && bodyProps.emptyContent) {\n    emptyContent = /* @__PURE__ */ jsx(\"tr\", { role: \"row\", children: /* @__PURE__ */ jsx(\n      \"td\",\n      {\n        className: slots == null ? void 0 : slots.emptyWrapper({ class: classNames == null ? void 0 : classNames.emptyWrapper }),\n        colSpan: collection.columnCount,\n        role: \"gridcell\",\n        children: !isLoading && bodyProps.emptyContent\n      }\n    ) });\n  }\n  if (isLoading && bodyProps.loadingContent) {\n    loadingContent = /* @__PURE__ */ jsxs(\"tr\", { role: \"row\", children: [\n      /* @__PURE__ */ jsx(\n        \"td\",\n        {\n          className: slots == null ? void 0 : slots.loadingWrapper({ class: classNames == null ? void 0 : classNames.loadingWrapper }),\n          colSpan: collection.columnCount,\n          role: \"gridcell\",\n          children: bodyProps.loadingContent\n        }\n      ),\n      !emptyContent && collection.size === 0 ? /* @__PURE__ */ jsx(\"td\", { className: slots == null ? void 0 : slots.emptyWrapper({ class: classNames == null ? void 0 : classNames.emptyWrapper }) }) : null\n    ] });\n  }\n  return /* @__PURE__ */ jsxs(\n    Component,\n    {\n      ref: domRef,\n      ...mergeProps(\n        rowGroupProps,\n        filterDOMProps(bodyProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        otherProps\n      ),\n      className: (_a = slots.tbody) == null ? void 0 : _a.call(slots, { class: tbodyStyles }),\n      \"data-empty\": dataAttr(collection.size === 0),\n      \"data-loading\": dataAttr(isLoading),\n      children: [\n        renderRows,\n        loadingContent,\n        emptyContent\n      ]\n    }\n  );\n});\nTableBody.displayName = \"NextUI.TableBody\";\nvar table_body_default = TableBody;\n\nexport {\n  table_body_default\n};\n", "\"use client\";\n\n// src/table-column-header.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useTableColumnHeader } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { ChevronDownIcon } from \"@nextui-org/shared-icons\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar TableColumnHeader = forwardRef((props, ref) => {\n  var _a, _b, _c, _d, _e;\n  const { as, className, state, node, slots, classNames, ...otherProps } = props;\n  const Component = as || \"th\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { columnHeaderProps } = useTableColumnHeader({ node }, state, domRef);\n  const thStyles = clsx(classNames == null ? void 0 : classNames.th, className, (_a = node.props) == null ? void 0 : _a.className);\n  const { isFocusVisible, focusProps } = useFocusRing();\n  const { isHovered, hoverProps } = useHover({});\n  const { hideHeader, align, ...columnProps } = node.props;\n  const allowsSorting = columnProps.allowsSorting;\n  return /* @__PURE__ */ jsxs(\n    Component,\n    {\n      ref: domRef,\n      colSpan: node.colspan,\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-sortable\": dataAttr(allowsSorting),\n      ...mergeProps(\n        columnHeaderProps,\n        focusProps,\n        filterDOMProps(columnProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        allowsSorting ? hoverProps : {},\n        otherProps\n      ),\n      className: (_b = slots.th) == null ? void 0 : _b.call(slots, { align, class: thStyles }),\n      children: [\n        hideHeader ? /* @__PURE__ */ jsx(VisuallyHidden, { children: node.rendered }) : node.rendered,\n        allowsSorting && /* @__PURE__ */ jsx(\n          ChevronDownIcon,\n          {\n            \"aria-hidden\": \"true\",\n            className: (_c = slots.sortIcon) == null ? void 0 : _c.call(slots, { class: classNames == null ? void 0 : classNames.sortIcon }),\n            \"data-direction\": (_d = state.sortDescriptor) == null ? void 0 : _d.direction,\n            \"data-visible\": dataAttr(((_e = state.sortDescriptor) == null ? void 0 : _e.column) === node.key),\n            strokeWidth: 3\n          }\n        )\n      ]\n    }\n  );\n});\nTableColumnHeader.displayName = \"NextUI.TableColumnHeader\";\nvar table_column_header_default = TableColumnHeader;\n\nexport {\n  table_column_header_default\n};\n", "\"use client\";\n\n// src/table-header-row.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useTableHeaderRow } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableHeaderRow = forwardRef((props, ref) => {\n  var _a, _b;\n  const { as, className, children, node, slots, classNames, state, ...otherProps } = props;\n  const Component = as || \"tr\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { rowProps } = useTableHeaderRow({ node }, state, domRef);\n  const trStyles = clsx(classNames == null ? void 0 : classNames.tr, className, (_a = node.props) == null ? void 0 : _a.className);\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      ...mergeProps(\n        rowProps,\n        filterDOMProps(node.props, {\n          enabled: shouldFilterDOMProps\n        }),\n        otherProps\n      ),\n      className: (_b = slots.tr) == null ? void 0 : _b.call(slots, { class: trStyles }),\n      children\n    }\n  );\n});\nTableHeaderRow.displayName = \"NextUI.TableHeaderRow\";\nvar table_header_row_default = TableHeaderRow;\n\nexport {\n  table_header_row_default\n};\n", "\"use client\";\n\n// src/table-row-group.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useTableRowGroup } from \"@react-aria/table\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableRowGroup = forwardRef((props, ref) => {\n  var _a;\n  const { as, className, children, slots, classNames, ...otherProps } = props;\n  const Component = as || \"thead\";\n  const domRef = useDOMRef(ref);\n  const { rowGroupProps } = useTableRowGroup();\n  const theadStyles = clsx(classNames == null ? void 0 : classNames.thead, className);\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ref: domRef,\n      className: (_a = slots.thead) == null ? void 0 : _a.call(slots, { class: theadStyles }),\n      ...mergeProps(rowGroupProps, otherProps),\n      children\n    }\n  );\n});\nTableRowGroup.displayName = \"NextUI.TableRowGroup\";\nvar table_row_group_default = TableRowGroup;\n\nexport {\n  table_row_group_default\n};\n", "\"use client\";\nimport {\n  table_select_all_checkbox_default\n} from \"./chunk-IZM76DYO.mjs\";\nimport {\n  useTable\n} from \"./chunk-WTWKTCHZ.mjs\";\nimport {\n  table_body_default\n} from \"./chunk-RBQQFBYX.mjs\";\nimport {\n  table_column_header_default\n} from \"./chunk-XPS6TYRF.mjs\";\nimport {\n  table_header_row_default\n} from \"./chunk-N2ZOKY36.mjs\";\nimport {\n  table_row_group_default\n} from \"./chunk-GZVIASP2.mjs\";\n\n// src/table.tsx\nimport { useCallback } from \"react\";\nimport { Spacer } from \"@nextui-org/spacer\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Table = forwardRef((props, ref) => {\n  const {\n    BaseComponent,\n    Component,\n    collection,\n    values,\n    topContent,\n    topContentPlacement,\n    bottomContentPlacement,\n    bottomContent,\n    removeWrapper,\n    getBaseProps,\n    getWrapperProps,\n    getTableProps\n  } = useTable({\n    ...props,\n    ref\n  });\n  const Wrapper = useCallback(\n    ({ children }) => {\n      if (removeWrapper) {\n        return children;\n      }\n      return /* @__PURE__ */ jsx(BaseComponent, { ...getWrapperProps(), children });\n    },\n    [removeWrapper, getWrapperProps]\n  );\n  return /* @__PURE__ */ jsxs(\"div\", { ...getBaseProps(), children: [\n    topContentPlacement === \"outside\" && topContent,\n    /* @__PURE__ */ jsx(Wrapper, { children: /* @__PURE__ */ jsxs(Fragment, { children: [\n      topContentPlacement === \"inside\" && topContent,\n      /* @__PURE__ */ jsxs(Component, { ...getTableProps(), children: [\n        /* @__PURE__ */ jsxs(table_row_group_default, { classNames: values.classNames, slots: values.slots, children: [\n          collection.headerRows.map((headerRow) => /* @__PURE__ */ jsx(\n            table_header_row_default,\n            {\n              classNames: values.classNames,\n              node: headerRow,\n              slots: values.slots,\n              state: values.state,\n              children: [...headerRow.childNodes].map(\n                (column) => {\n                  var _a;\n                  return ((_a = column == null ? void 0 : column.props) == null ? void 0 : _a.isSelectionCell) ? /* @__PURE__ */ jsx(\n                    table_select_all_checkbox_default,\n                    {\n                      checkboxesProps: values.checkboxesProps,\n                      classNames: values.classNames,\n                      color: values.color,\n                      disableAnimation: values.disableAnimation,\n                      node: column,\n                      selectionMode: values.selectionMode,\n                      slots: values.slots,\n                      state: values.state\n                    },\n                    column == null ? void 0 : column.key\n                  ) : /* @__PURE__ */ jsx(\n                    table_column_header_default,\n                    {\n                      classNames: values.classNames,\n                      node: column,\n                      slots: values.slots,\n                      state: values.state\n                    },\n                    column == null ? void 0 : column.key\n                  );\n                }\n              )\n            },\n            headerRow == null ? void 0 : headerRow.key\n          )),\n          /* @__PURE__ */ jsx(Spacer, { as: \"tr\", tabIndex: -1, y: 1 })\n        ] }),\n        /* @__PURE__ */ jsx(\n          table_body_default,\n          {\n            checkboxesProps: values.checkboxesProps,\n            classNames: values.classNames,\n            collection: values.collection,\n            color: values.color,\n            disableAnimation: values.disableAnimation,\n            isSelectable: values.isSelectable,\n            selectionMode: values.selectionMode,\n            slots: values.slots,\n            state: values.state\n          }\n        )\n      ] }),\n      bottomContentPlacement === \"inside\" && bottomContent\n    ] }) }),\n    bottomContentPlacement === \"outside\" && bottomContent\n  ] });\n});\nTable.displayName = \"NextUI.Table\";\nvar table_default = Table;\n\nexport {\n  table_default\n};\n", "// src/utils.ts\nvar spacing = {\n  px: \"1px\",\n  0: \"0px\",\n  0.5: \"0.125rem\",\n  1: \"0.25rem\",\n  1.5: \"0.375rem\",\n  2: \"0.5rem\",\n  2.5: \"0.625rem\",\n  3: \"0.75rem\",\n  3.5: \"0.875rem\",\n  4: \"1rem\",\n  5: \"1.25rem\",\n  6: \"1.5rem\",\n  7: \"1.75rem\",\n  8: \"2rem\",\n  9: \"2.25rem\",\n  10: \"2.5rem\",\n  11: \"2.75rem\",\n  12: \"3rem\",\n  14: \"3.5rem\",\n  16: \"4rem\",\n  20: \"5rem\",\n  24: \"6rem\",\n  28: \"7rem\",\n  32: \"8rem\",\n  36: \"9rem\",\n  40: \"10rem\",\n  44: \"11rem\",\n  48: \"12rem\",\n  52: \"13rem\",\n  56: \"14rem\",\n  60: \"15rem\",\n  64: \"16rem\",\n  72: \"18rem\",\n  80: \"20rem\",\n  96: \"24rem\"\n};\n\nexport {\n  spacing\n};\n", "import {\n  spacing\n} from \"./chunk-CH7FQ62Q.mjs\";\n\n// src/use-spacer.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { spacer } from \"@nextui-org/theme\";\nimport { clsx, dataAttr, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo } from \"react\";\nvar getMargin = (value) => {\n  var _a;\n  return (_a = spacing[value]) != null ? _a : value;\n};\nfunction useSpacer(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, spacer.variantKeys);\n  const { as, className, x = 1, y = 1, ...otherProps } = props;\n  const Component = as || \"span\";\n  const styles = useMemo(\n    () => spacer({\n      ...variantProps,\n      className\n    }),\n    [objectToDeps(variantProps), className]\n  );\n  const marginLeft = getMargin(x);\n  const marginTop = getMargin(y);\n  const getSpacerProps = (props2 = {}) => ({\n    ...props2,\n    ...otherProps,\n    \"aria-hidden\": dataAttr(true),\n    className: clsx(styles, props2.className),\n    style: {\n      ...props2.style,\n      ...otherProps.style,\n      marginLeft,\n      marginTop\n    }\n  });\n  return { Component, getSpacerProps };\n}\n\nexport {\n  getMargin,\n  useSpacer\n};\n", "import {\n  useSpacer\n} from \"./chunk-XIKEQB64.mjs\";\n\n// src/spacer.tsx\nimport { forwardRef } from \"@nextui-org/system-rsc\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Spacer = forwardRef((props, ref) => {\n  const { Component, getSpacerProps } = useSpacer({ ...props });\n  return /* @__PURE__ */ jsx(Component, { ref, ...getSpacerProps() });\n});\nSpacer.displayName = \"NextUI.Spacer\";\nvar spacer_default = Spacer;\n\nexport {\n  spacer_default\n};\n", "\"use client\";\n\n// src/base/table-row.tsx\nimport { Row } from \"@react-stately/table\";\nvar TableRow = Row;\nvar table_row_default = TableRow;\n\nexport {\n  table_row_default\n};\n", "\"use client\";\n\n// src/base/table-body.tsx\nimport { TableBody as TableBodyBase } from \"@react-stately/table\";\nvar TableBody = TableBodyBase;\nvar table_body_default = TableBody;\n\nexport {\n  table_body_default\n};\n", "\"use client\";\n\n// src/base/table-cell.tsx\nimport { Cell } from \"@react-stately/table\";\nvar TableCell = Cell;\nvar table_cell_default = TableCell;\n\nexport {\n  table_cell_default\n};\n", "\"use client\";\n\n// src/base/table-column.tsx\nimport { Column } from \"@react-stately/table\";\nvar TableColumn = Column;\nvar table_column_default = TableColumn;\n\nexport {\n  table_column_default\n};\n", "\"use client\";\n\n// src/base/table-header.tsx\nimport { TableHeader as TableHeaderBase } from \"@react-stately/table\";\nvar TableHeader = TableHeaderBase;\nvar table_header_default = TableHeader;\n\nexport {\n  table_header_default\n};\n"],
  "mappings": "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",
  "names": ["$6Fm0V$react", "getCollectionNode", "items", "$gtysd$react", "$fzaAv$react", "items", "node", "$lbNth$useMemo", "a", "$dAE4Y$useRef", "$3H3GQ$flushSync", "$3H3GQ$useRef", "$3H3GQ$useEffect", "itemProps", "$581M0$useEffect", "$581M0$useRef", "key", "$1aJk5$useMemo", "item", "$4stjr$useRef", "$parcel$interopDefault", "$kh5JA$useMemo", "$eV0xE$useMemo", "$eV0xE$useCallback", "$j4Qbl$useRef", "$parcel$interopDefault", "$dDeJM$useMemo", "$parcel$interopDefault", "$parcel$interopDefault", "$cjB6b$useEffect", "$parcel$interopDefault", "import_react", "$jNP0e$useEffect", "$6clEo$useRef", "$6clEo$useEffect", "$3Of4A$useRef", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "$5c3e21d68f1c4674$export$a966af930f325cab", "$7JYt2$useState", "$7JYt2$useMemo", "$5c3e21d68f1c4674$export$439d29a4e110a164", "$7JYt2$react", "import_jsx_runtime", "$5c3e21d68f1c4674$export$439d29a4e110a164", "import_react", "$6tM1y$useRef", "$6tM1y$useState", "$6tM1y$useMemo", "$6tM1y$useEffect", "$7nPCv$useMemo", "$7nPCv$useRef", "$7nPCv$useEffect", "last", "column", "i", "$1YSEb$useState", "$1YSEb$useMemo", "$1YSEb$useCallback", "_props_sortDescriptor", "getCollectionNode", "columns", "$20k3Y$react", "getCollectionNode", "items", "$6tF2U$react", "getCollectionNode", "$kIQ5E$react", "childColumns", "context", "getCollectionNode", "$7GIZw$react", "getCollectionNode", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "$5c3e21d68f1c4674$export$439d29a4e110a164", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "$5c3e21d68f1c4674$export$439d29a4e110a164", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "TableRow", "table_row_default", "TableBody", "table_body_default", "TableCell", "table_cell_default"]
}
